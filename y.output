   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 clas

   3  $$2 :

   4  clas : CLASSE IDENT $$2 '{' privados publicos '}'

   5  privados : PRIVATE dList

   6  publicos : PUBLIC mList

   7  $$3 :

   8  dList : type $$3 decl dList
   9        |

  10  decl : IDENT moreDecl ';'

  11  moreDecl : ',' IDENT moreDecl
  12           |

  13  type : INT
  14       | BOOL
  15       | DOUBLE
  16       | STRING
  17       | IDENT

  18  $$4 :

  19  mList : $$4 blocos main

  20  blocos : blocos bl
  21         |

  22  $$5 :

  23  bl : INT IDENT '(' parametros ')' $$5 dList bloco

  24  $$6 :

  25  bl : BOOL IDENT '(' parametros ')' $$6 dList bloco

  26  $$7 :

  27  bl : DOUBLE IDENT '(' parametros ')' $$7 dList bloco

  28  $$8 :

  29  bl : STRING IDENT '(' parametros ')' $$8 dList bloco
  30     | IDENT '(' parametros ')' blocoConstrutor

  31  $$9 :

  32  parametros : $$9 type IDENT lParametros
  33             |

  34  $$10 :

  35  lParametros : $$10 ',' type IDENT lParametros
  36              |

  37  main : VOID MAIN '(' ')' dList blocoConstrutor
  38       |

  39  blocoConstrutor : '{' listacmd '}'

  40  bloco : '{' listacmd retorno '}'

  41  $$11 :

  42  retorno : RETORNO exp $$11 ';'

  43  listacmd : listacmd cmd
  44           |

  45  listacmdrep : listacmdrep cmd
  46              | BREAK
  47              |

  48  cmd : exp ';'

  49  $$12 :

  50  cmd : IF exp $$12 ':' listacmd else ENDIF
  51      | while
  52      | for
  53      | ESCREVA escreva ';'
  54      | LEIA leia ';'

  55  else : '[' ELSE ':' cmd listacmd ']'
  56       |

  57  $$13 :

  58  escreva : exp $$13 parametroEscreva

  59  leia : exp

  60  parametroEscreva : ',' exp
  61                   |

  62  $$14 :

  63  while : WHILE exp $$14 cmd listacmdrep ENDWHILE

  64  $$15 :

  65  $$16 :

  66  for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR

  67  exp : exp '+' exp
  68      | exp '*' exp
  69      | exp '-' exp
  70      | exp '/' exp
  71      | exp '>' exp
  72      | exp '<' exp
  73      | exp AND exp
  74      | exp OR exp
  75      | exp LESSEREQUAL exp
  76      | exp GREATEREQUAL exp
  77      | TRUE
  78      | FALSE
  79      | NUM
  80      | DOUBLE
  81      | '(' exp ')'
  82      | LITERAL
  83      | IDENT
  84      | exp '=' exp
  85      | metodo

  86  metodo : IDENT '.' IDENT '(' parametrosMetodo ')'

  87  parametrosMetodo : exp lParametrosMetodo
  88                   |

  89  lParametrosMetodo : ',' exp lParametrosMetodo
  90                    |

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . clas  (2)

	CLASSE  shift 3
	.  error

	clas  goto 4


state 3
	clas : CLASSE . IDENT $$2 '{' privados publicos '}'  (4)

	IDENT  shift 5
	.  error


state 4
	prog : $$1 clas .  (2)

	.  reduce 2


state 5
	clas : CLASSE IDENT . $$2 '{' privados publicos '}'  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 6


state 6
	clas : CLASSE IDENT $$2 . '{' privados publicos '}'  (4)

	'{'  shift 7
	.  error


state 7
	clas : CLASSE IDENT $$2 '{' . privados publicos '}'  (4)

	PRIVATE  shift 8
	.  error

	privados  goto 9


state 8
	privados : PRIVATE . dList  (5)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9

	type  goto 15
	dList  goto 16


state 9
	clas : CLASSE IDENT $$2 '{' privados . publicos '}'  (4)

	PUBLIC  shift 17
	.  error

	publicos  goto 18


state 10
	type : IDENT .  (17)

	.  reduce 17


state 11
	type : INT .  (13)

	.  reduce 13


state 12
	type : BOOL .  (14)

	.  reduce 14


state 13
	type : STRING .  (16)

	.  reduce 16


state 14
	type : DOUBLE .  (15)

	.  reduce 15


state 15
	dList : type . $$3 decl dList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 19


state 16
	privados : PRIVATE dList .  (5)

	.  reduce 5


state 17
	publicos : PUBLIC . mList  (6)
	$$4 : .  (18)

	.  reduce 18

	mList  goto 20
	$$4  goto 21


state 18
	clas : CLASSE IDENT $$2 '{' privados publicos . '}'  (4)

	'}'  shift 22
	.  error


state 19
	dList : type $$3 . decl dList  (8)

	IDENT  shift 23
	.  error

	decl  goto 24


state 20
	publicos : PUBLIC mList .  (6)

	.  reduce 6


state 21
	mList : $$4 . blocos main  (19)
	blocos : .  (21)

	.  reduce 21

	blocos  goto 25


state 22
	clas : CLASSE IDENT $$2 '{' privados publicos '}' .  (4)

	.  reduce 4


state 23
	decl : IDENT . moreDecl ';'  (10)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 27


state 24
	dList : type $$3 decl . dList  (8)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9
	'{'  reduce 9

	type  goto 15
	dList  goto 28


state 25
	mList : $$4 blocos . main  (19)
	blocos : blocos . bl  (20)
	main : .  (38)

	IDENT  shift 29
	INT  shift 30
	BOOL  shift 31
	STRING  shift 32
	DOUBLE  shift 33
	VOID  shift 34
	'}'  reduce 38

	main  goto 35
	bl  goto 36


state 26
	moreDecl : ',' . IDENT moreDecl  (11)

	IDENT  shift 37
	.  error


state 27
	decl : IDENT moreDecl . ';'  (10)

	';'  shift 38
	.  error


state 28
	dList : type $$3 decl dList .  (8)

	.  reduce 8


state 29
	bl : IDENT . '(' parametros ')' blocoConstrutor  (30)

	'('  shift 39
	.  error


state 30
	bl : INT . IDENT '(' parametros ')' $$5 dList bloco  (23)

	IDENT  shift 40
	.  error


state 31
	bl : BOOL . IDENT '(' parametros ')' $$6 dList bloco  (25)

	IDENT  shift 41
	.  error


state 32
	bl : STRING . IDENT '(' parametros ')' $$8 dList bloco  (29)

	IDENT  shift 42
	.  error


state 33
	bl : DOUBLE . IDENT '(' parametros ')' $$7 dList bloco  (27)

	IDENT  shift 43
	.  error


state 34
	main : VOID . MAIN '(' ')' dList blocoConstrutor  (37)

	MAIN  shift 44
	.  error


state 35
	mList : $$4 blocos main .  (19)

	.  reduce 19


state 36
	blocos : blocos bl .  (20)

	.  reduce 20


state 37
	moreDecl : ',' IDENT . moreDecl  (11)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 45


state 38
	decl : IDENT moreDecl ';' .  (10)

	.  reduce 10


state 39
	bl : IDENT '(' . parametros ')' blocoConstrutor  (30)
	$$9 : .  (31)
	parametros : .  (33)

	IDENT  reduce 31
	INT  reduce 31
	BOOL  reduce 31
	STRING  reduce 31
	DOUBLE  reduce 31
	')'  reduce 33

	parametros  goto 46
	$$9  goto 47


state 40
	bl : INT IDENT . '(' parametros ')' $$5 dList bloco  (23)

	'('  shift 48
	.  error


state 41
	bl : BOOL IDENT . '(' parametros ')' $$6 dList bloco  (25)

	'('  shift 49
	.  error


state 42
	bl : STRING IDENT . '(' parametros ')' $$8 dList bloco  (29)

	'('  shift 50
	.  error


state 43
	bl : DOUBLE IDENT . '(' parametros ')' $$7 dList bloco  (27)

	'('  shift 51
	.  error


state 44
	main : VOID MAIN . '(' ')' dList blocoConstrutor  (37)

	'('  shift 52
	.  error


state 45
	moreDecl : ',' IDENT moreDecl .  (11)

	.  reduce 11


state 46
	bl : IDENT '(' parametros . ')' blocoConstrutor  (30)

	')'  shift 53
	.  error


state 47
	parametros : $$9 . type IDENT lParametros  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 54


state 48
	bl : INT IDENT '(' . parametros ')' $$5 dList bloco  (23)
	$$9 : .  (31)
	parametros : .  (33)

	IDENT  reduce 31
	INT  reduce 31
	BOOL  reduce 31
	STRING  reduce 31
	DOUBLE  reduce 31
	')'  reduce 33

	parametros  goto 55
	$$9  goto 47


state 49
	bl : BOOL IDENT '(' . parametros ')' $$6 dList bloco  (25)
	$$9 : .  (31)
	parametros : .  (33)

	IDENT  reduce 31
	INT  reduce 31
	BOOL  reduce 31
	STRING  reduce 31
	DOUBLE  reduce 31
	')'  reduce 33

	parametros  goto 56
	$$9  goto 47


state 50
	bl : STRING IDENT '(' . parametros ')' $$8 dList bloco  (29)
	$$9 : .  (31)
	parametros : .  (33)

	IDENT  reduce 31
	INT  reduce 31
	BOOL  reduce 31
	STRING  reduce 31
	DOUBLE  reduce 31
	')'  reduce 33

	parametros  goto 57
	$$9  goto 47


state 51
	bl : DOUBLE IDENT '(' . parametros ')' $$7 dList bloco  (27)
	$$9 : .  (31)
	parametros : .  (33)

	IDENT  reduce 31
	INT  reduce 31
	BOOL  reduce 31
	STRING  reduce 31
	DOUBLE  reduce 31
	')'  reduce 33

	parametros  goto 58
	$$9  goto 47


state 52
	main : VOID MAIN '(' . ')' dList blocoConstrutor  (37)

	')'  shift 59
	.  error


state 53
	bl : IDENT '(' parametros ')' . blocoConstrutor  (30)

	'{'  shift 60
	.  error

	blocoConstrutor  goto 61


state 54
	parametros : $$9 type . IDENT lParametros  (32)

	IDENT  shift 62
	.  error


state 55
	bl : INT IDENT '(' parametros . ')' $$5 dList bloco  (23)

	')'  shift 63
	.  error


state 56
	bl : BOOL IDENT '(' parametros . ')' $$6 dList bloco  (25)

	')'  shift 64
	.  error


state 57
	bl : STRING IDENT '(' parametros . ')' $$8 dList bloco  (29)

	')'  shift 65
	.  error


state 58
	bl : DOUBLE IDENT '(' parametros . ')' $$7 dList bloco  (27)

	')'  shift 66
	.  error


state 59
	main : VOID MAIN '(' ')' . dList blocoConstrutor  (37)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 67


state 60
	blocoConstrutor : '{' . listacmd '}'  (39)
	listacmd : .  (44)

	.  reduce 44

	listacmd  goto 68


state 61
	bl : IDENT '(' parametros ')' blocoConstrutor .  (30)

	.  reduce 30


state 62
	parametros : $$9 type IDENT . lParametros  (32)
	$$10 : .  (34)
	lParametros : .  (36)

	','  reduce 34
	')'  reduce 36

	lParametros  goto 69
	$$10  goto 70


state 63
	bl : INT IDENT '(' parametros ')' . $$5 dList bloco  (23)
	$$5 : .  (22)

	.  reduce 22

	$$5  goto 71


state 64
	bl : BOOL IDENT '(' parametros ')' . $$6 dList bloco  (25)
	$$6 : .  (24)

	.  reduce 24

	$$6  goto 72


state 65
	bl : STRING IDENT '(' parametros ')' . $$8 dList bloco  (29)
	$$8 : .  (28)

	.  reduce 28

	$$8  goto 73


state 66
	bl : DOUBLE IDENT '(' parametros ')' . $$7 dList bloco  (27)
	$$7 : .  (26)

	.  reduce 26

	$$7  goto 74


state 67
	main : VOID MAIN '(' ')' dList . blocoConstrutor  (37)

	'{'  shift 60
	.  error

	blocoConstrutor  goto 75


state 68
	blocoConstrutor : '{' listacmd . '}'  (39)
	listacmd : listacmd . cmd  (43)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'}'  shift 87
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 69
	parametros : $$9 type IDENT lParametros .  (32)

	.  reduce 32


state 70
	lParametros : $$10 . ',' type IDENT lParametros  (35)

	','  shift 94
	.  error


state 71
	bl : INT IDENT '(' parametros ')' $$5 . dList bloco  (23)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 95


state 72
	bl : BOOL IDENT '(' parametros ')' $$6 . dList bloco  (25)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 96


state 73
	bl : STRING IDENT '(' parametros ')' $$8 . dList bloco  (29)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 97


state 74
	bl : DOUBLE IDENT '(' parametros ')' $$7 . dList bloco  (27)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 98


state 75
	main : VOID MAIN '(' ')' dList blocoConstrutor .  (37)

	.  reduce 37


state 76
	exp : IDENT .  (83)
	metodo : IDENT . '.' IDENT '(' parametrosMetodo ')'  (86)

	'.'  shift 99
	IDENT  reduce 83
	NUM  reduce 83
	DOUBLE  reduce 83
	TRUE  reduce 83
	FALSE  reduce 83
	LITERAL  reduce 83
	AND  reduce 83
	IF  reduce 83
	WHILE  reduce 83
	FOR  reduce 83
	ESCREVA  reduce 83
	LEIA  reduce 83
	OR  reduce 83
	GREATEREQUAL  reduce 83
	LESSEREQUAL  reduce 83
	'='  reduce 83
	'>'  reduce 83
	'<'  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'/'  reduce 83
	'*'  reduce 83
	';'  reduce 83
	','  reduce 83
	'('  reduce 83
	')'  reduce 83
	':'  reduce 83


state 77
	exp : NUM .  (79)

	.  reduce 79


state 78
	exp : DOUBLE .  (80)

	.  reduce 80


state 79
	exp : TRUE .  (77)

	.  reduce 77


state 80
	exp : FALSE .  (78)

	.  reduce 78


state 81
	exp : LITERAL .  (82)

	.  reduce 82


state 82
	cmd : IF . exp $$12 ':' listacmd else ENDIF  (50)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 100
	metodo  goto 93


state 83
	while : WHILE . exp $$14 cmd listacmdrep ENDWHILE  (63)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 101
	metodo  goto 93


state 84
	for : FOR . IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)

	IDENT  shift 102
	.  error


state 85
	cmd : ESCREVA . escreva ';'  (53)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 103
	escreva  goto 104
	metodo  goto 93


state 86
	cmd : LEIA . leia ';'  (54)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 105
	leia  goto 106
	metodo  goto 93


state 87
	blocoConstrutor : '{' listacmd '}' .  (39)

	.  reduce 39


state 88
	exp : '(' . exp ')'  (81)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 107
	metodo  goto 93


state 89
	cmd : exp . ';'  (48)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  shift 119
	.  error


state 90
	listacmd : listacmd cmd .  (43)

	.  reduce 43


state 91
	cmd : while .  (51)

	.  reduce 51


state 92
	cmd : for .  (52)

	.  reduce 52


state 93
	exp : metodo .  (85)

	.  reduce 85


state 94
	lParametros : $$10 ',' . type IDENT lParametros  (35)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 120


state 95
	bl : INT IDENT '(' parametros ')' $$5 dList . bloco  (23)

	'{'  shift 121
	.  error

	bloco  goto 122


state 96
	bl : BOOL IDENT '(' parametros ')' $$6 dList . bloco  (25)

	'{'  shift 121
	.  error

	bloco  goto 123


state 97
	bl : STRING IDENT '(' parametros ')' $$8 dList . bloco  (29)

	'{'  shift 121
	.  error

	bloco  goto 124


state 98
	bl : DOUBLE IDENT '(' parametros ')' $$7 dList . bloco  (27)

	'{'  shift 121
	.  error

	bloco  goto 125


state 99
	metodo : IDENT '.' . IDENT '(' parametrosMetodo ')'  (86)

	IDENT  shift 126
	.  error


state 100
	cmd : IF exp . $$12 ':' listacmd else ENDIF  (50)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$12 : .  (49)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	':'  reduce 49

	$$12  goto 127


state 101
	while : WHILE exp . $$14 cmd listacmdrep ENDWHILE  (63)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$14 : .  (62)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 62
	NUM  reduce 62
	DOUBLE  reduce 62
	TRUE  reduce 62
	FALSE  reduce 62
	LITERAL  reduce 62
	IF  reduce 62
	WHILE  reduce 62
	FOR  reduce 62
	ESCREVA  reduce 62
	LEIA  reduce 62
	'('  reduce 62

	$$14  goto 128


state 102
	for : FOR IDENT . '=' exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)

	'='  shift 129
	.  error


state 103
	escreva : exp . $$13 parametroEscreva  (58)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$13 : .  (57)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 57
	','  reduce 57

	$$13  goto 130


state 104
	cmd : ESCREVA escreva . ';'  (53)

	';'  shift 131
	.  error


state 105
	leia : exp .  (59)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 59


state 106
	cmd : LEIA leia . ';'  (54)

	';'  shift 132
	.  error


state 107
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : '(' exp . ')'  (81)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	')'  shift 133
	.  error


state 108
	exp : exp AND . exp  (73)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 134
	metodo  goto 93


state 109
	exp : exp OR . exp  (74)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 135
	metodo  goto 93


state 110
	exp : exp GREATEREQUAL . exp  (76)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 136
	metodo  goto 93


state 111
	exp : exp LESSEREQUAL . exp  (75)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 137
	metodo  goto 93


state 112
	exp : exp '=' . exp  (84)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 138
	metodo  goto 93


state 113
	exp : exp '>' . exp  (71)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 139
	metodo  goto 93


state 114
	exp : exp '<' . exp  (72)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 140
	metodo  goto 93


state 115
	exp : exp '+' . exp  (67)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 141
	metodo  goto 93


state 116
	exp : exp '-' . exp  (69)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 142
	metodo  goto 93


state 117
	exp : exp '/' . exp  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 143
	metodo  goto 93


state 118
	exp : exp '*' . exp  (68)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 144
	metodo  goto 93


state 119
	cmd : exp ';' .  (48)

	.  reduce 48


state 120
	lParametros : $$10 ',' type . IDENT lParametros  (35)

	IDENT  shift 145
	.  error


state 121
	bloco : '{' . listacmd retorno '}'  (40)
	listacmd : .  (44)

	.  reduce 44

	listacmd  goto 146


state 122
	bl : INT IDENT '(' parametros ')' $$5 dList bloco .  (23)

	.  reduce 23


state 123
	bl : BOOL IDENT '(' parametros ')' $$6 dList bloco .  (25)

	.  reduce 25


state 124
	bl : STRING IDENT '(' parametros ')' $$8 dList bloco .  (29)

	.  reduce 29


state 125
	bl : DOUBLE IDENT '(' parametros ')' $$7 dList bloco .  (27)

	.  reduce 27


state 126
	metodo : IDENT '.' IDENT . '(' parametrosMetodo ')'  (86)

	'('  shift 147
	.  error


state 127
	cmd : IF exp $$12 . ':' listacmd else ENDIF  (50)

	':'  shift 148
	.  error


state 128
	while : WHILE exp $$14 . cmd listacmdrep ENDWHILE  (63)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 149
	while  goto 91
	for  goto 92
	metodo  goto 93


state 129
	for : FOR IDENT '=' . exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 150
	metodo  goto 93


state 130
	escreva : exp $$13 . parametroEscreva  (58)
	parametroEscreva : .  (61)

	','  shift 151
	';'  reduce 61

	parametroEscreva  goto 152


state 131
	cmd : ESCREVA escreva ';' .  (53)

	.  reduce 53


state 132
	cmd : LEIA leia ';' .  (54)

	.  reduce 54


state 133
	exp : '(' exp ')' .  (81)

	.  reduce 81


state 134
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp AND exp .  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	.  reduce 73


state 135
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp OR exp .  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	.  reduce 74


state 136
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp GREATEREQUAL exp .  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 76
	NUM  reduce 76
	DOUBLE  reduce 76
	TRUE  reduce 76
	FALSE  reduce 76
	LITERAL  reduce 76
	IF  reduce 76
	WHILE  reduce 76
	FOR  reduce 76
	ESCREVA  reduce 76
	LEIA  reduce 76
	'='  reduce 76
	';'  reduce 76
	','  reduce 76
	'('  reduce 76
	')'  reduce 76
	':'  reduce 76


state 137
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp LESSEREQUAL exp .  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 75
	NUM  reduce 75
	DOUBLE  reduce 75
	TRUE  reduce 75
	FALSE  reduce 75
	LITERAL  reduce 75
	IF  reduce 75
	WHILE  reduce 75
	FOR  reduce 75
	ESCREVA  reduce 75
	LEIA  reduce 75
	'='  reduce 75
	';'  reduce 75
	','  reduce 75
	'('  reduce 75
	')'  reduce 75
	':'  reduce 75


state 138
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	exp : exp '=' exp .  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 84
	NUM  reduce 84
	DOUBLE  reduce 84
	TRUE  reduce 84
	FALSE  reduce 84
	LITERAL  reduce 84
	IF  reduce 84
	WHILE  reduce 84
	FOR  reduce 84
	ESCREVA  reduce 84
	LEIA  reduce 84
	';'  reduce 84
	','  reduce 84
	'('  reduce 84
	')'  reduce 84
	':'  reduce 84


state 139
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp '>' exp .  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 71
	NUM  reduce 71
	DOUBLE  reduce 71
	TRUE  reduce 71
	FALSE  reduce 71
	LITERAL  reduce 71
	IF  reduce 71
	WHILE  reduce 71
	FOR  reduce 71
	ESCREVA  reduce 71
	LEIA  reduce 71
	'='  reduce 71
	';'  reduce 71
	','  reduce 71
	'('  reduce 71
	')'  reduce 71
	':'  reduce 71


state 140
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp '<' exp .  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 72
	NUM  reduce 72
	DOUBLE  reduce 72
	TRUE  reduce 72
	FALSE  reduce 72
	LITERAL  reduce 72
	IF  reduce 72
	WHILE  reduce 72
	FOR  reduce 72
	ESCREVA  reduce 72
	LEIA  reduce 72
	'='  reduce 72
	';'  reduce 72
	','  reduce 72
	'('  reduce 72
	')'  reduce 72
	':'  reduce 72


state 141
	exp : exp . '+' exp  (67)
	exp : exp '+' exp .  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 67
	NUM  reduce 67
	DOUBLE  reduce 67
	TRUE  reduce 67
	FALSE  reduce 67
	LITERAL  reduce 67
	IF  reduce 67
	WHILE  reduce 67
	FOR  reduce 67
	ESCREVA  reduce 67
	LEIA  reduce 67
	GREATEREQUAL  reduce 67
	LESSEREQUAL  reduce 67
	'='  reduce 67
	'>'  reduce 67
	'<'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	';'  reduce 67
	','  reduce 67
	'('  reduce 67
	')'  reduce 67
	':'  reduce 67


state 142
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp '-' exp .  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 69
	NUM  reduce 69
	DOUBLE  reduce 69
	TRUE  reduce 69
	FALSE  reduce 69
	LITERAL  reduce 69
	IF  reduce 69
	WHILE  reduce 69
	FOR  reduce 69
	ESCREVA  reduce 69
	LEIA  reduce 69
	GREATEREQUAL  reduce 69
	LESSEREQUAL  reduce 69
	'='  reduce 69
	'>'  reduce 69
	'<'  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	';'  reduce 69
	','  reduce 69
	'('  reduce 69
	')'  reduce 69
	':'  reduce 69


state 143
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp '/' exp .  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	IDENT  reduce 70
	NUM  reduce 70
	DOUBLE  reduce 70
	TRUE  reduce 70
	FALSE  reduce 70
	LITERAL  reduce 70
	IF  reduce 70
	WHILE  reduce 70
	FOR  reduce 70
	ESCREVA  reduce 70
	LEIA  reduce 70
	GREATEREQUAL  reduce 70
	LESSEREQUAL  reduce 70
	'='  reduce 70
	'>'  reduce 70
	'<'  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	'/'  reduce 70
	'*'  reduce 70
	';'  reduce 70
	','  reduce 70
	'('  reduce 70
	')'  reduce 70
	':'  reduce 70


state 144
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp '*' exp .  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	IDENT  reduce 68
	NUM  reduce 68
	DOUBLE  reduce 68
	TRUE  reduce 68
	FALSE  reduce 68
	LITERAL  reduce 68
	IF  reduce 68
	WHILE  reduce 68
	FOR  reduce 68
	ESCREVA  reduce 68
	LEIA  reduce 68
	GREATEREQUAL  reduce 68
	LESSEREQUAL  reduce 68
	'='  reduce 68
	'>'  reduce 68
	'<'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'/'  reduce 68
	'*'  reduce 68
	';'  reduce 68
	','  reduce 68
	'('  reduce 68
	')'  reduce 68
	':'  reduce 68


state 145
	lParametros : $$10 ',' type IDENT . lParametros  (35)
	$$10 : .  (34)
	lParametros : .  (36)

	','  reduce 34
	')'  reduce 36

	lParametros  goto 153
	$$10  goto 70


state 146
	bloco : '{' listacmd . retorno '}'  (40)
	listacmd : listacmd . cmd  (43)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	RETORNO  shift 154
	'('  shift 88
	.  error

	exp  goto 89
	retorno  goto 155
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 147
	metodo : IDENT '.' IDENT '(' . parametrosMetodo ')'  (86)
	parametrosMetodo : .  (88)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	')'  reduce 88

	exp  goto 156
	metodo  goto 93
	parametrosMetodo  goto 157


state 148
	cmd : IF exp $$12 ':' . listacmd else ENDIF  (50)
	listacmd : .  (44)

	.  reduce 44

	listacmd  goto 158


state 149
	while : WHILE exp $$14 cmd . listacmdrep ENDWHILE  (63)
	listacmdrep : .  (47)

	BREAK  shift 159
	IDENT  reduce 47
	NUM  reduce 47
	DOUBLE  reduce 47
	TRUE  reduce 47
	FALSE  reduce 47
	LITERAL  reduce 47
	IF  reduce 47
	WHILE  reduce 47
	ENDWHILE  reduce 47
	FOR  reduce 47
	ESCREVA  reduce 47
	LEIA  reduce 47
	'('  reduce 47

	listacmdrep  goto 160


state 150
	for : FOR IDENT '=' exp . $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$15 : .  (64)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 64

	$$15  goto 161


state 151
	parametroEscreva : ',' . exp  (60)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 162
	metodo  goto 93


state 152
	escreva : exp $$13 parametroEscreva .  (58)

	.  reduce 58


state 153
	lParametros : $$10 ',' type IDENT lParametros .  (35)

	.  reduce 35


state 154
	retorno : RETORNO . exp $$11 ';'  (42)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 163
	metodo  goto 93


state 155
	bloco : '{' listacmd retorno . '}'  (40)

	'}'  shift 164
	.  error


state 156
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	parametrosMetodo : exp . lParametrosMetodo  (87)
	lParametrosMetodo : .  (90)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	','  shift 165
	')'  reduce 90

	lParametrosMetodo  goto 166


state 157
	metodo : IDENT '.' IDENT '(' parametrosMetodo . ')'  (86)

	')'  shift 167
	.  error


state 158
	listacmd : listacmd . cmd  (43)
	cmd : IF exp $$12 ':' listacmd . else ENDIF  (50)
	else : .  (56)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'['  shift 168
	'('  shift 88
	ENDIF  reduce 56

	exp  goto 89
	cmd  goto 90
	else  goto 169
	while  goto 91
	for  goto 92
	metodo  goto 93


state 159
	listacmdrep : BREAK .  (46)

	.  reduce 46


state 160
	listacmdrep : listacmdrep . cmd  (45)
	while : WHILE exp $$14 cmd listacmdrep . ENDWHILE  (63)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	ENDWHILE  shift 170
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 171
	while  goto 91
	for  goto 92
	metodo  goto 93


state 161
	for : FOR IDENT '=' exp $$15 . ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)

	';'  shift 172
	.  error


state 162
	parametroEscreva : ',' exp .  (60)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 60


state 163
	retorno : RETORNO exp . $$11 ';'  (42)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$11 : .  (41)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 41

	$$11  goto 173


state 164
	bloco : '{' listacmd retorno '}' .  (40)

	.  reduce 40


state 165
	lParametrosMetodo : ',' . exp lParametrosMetodo  (89)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 174
	metodo  goto 93


state 166
	parametrosMetodo : exp lParametrosMetodo .  (87)

	.  reduce 87


state 167
	metodo : IDENT '.' IDENT '(' parametrosMetodo ')' .  (86)

	.  reduce 86


state 168
	else : '[' . ELSE ':' cmd listacmd ']'  (55)

	ELSE  shift 175
	.  error


state 169
	cmd : IF exp $$12 ':' listacmd else . ENDIF  (50)

	ENDIF  shift 176
	.  error


state 170
	while : WHILE exp $$14 cmd listacmdrep ENDWHILE .  (63)

	.  reduce 63


state 171
	listacmdrep : listacmdrep cmd .  (45)

	.  reduce 45


state 172
	for : FOR IDENT '=' exp $$15 ';' . exp $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 177
	metodo  goto 93


state 173
	retorno : RETORNO exp $$11 . ';'  (42)

	';'  shift 178
	.  error


state 174
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	lParametrosMetodo : ',' exp . lParametrosMetodo  (89)
	lParametrosMetodo : .  (90)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	','  shift 165
	')'  reduce 90

	lParametrosMetodo  goto 179


state 175
	else : '[' ELSE . ':' cmd listacmd ']'  (55)

	':'  shift 180
	.  error


state 176
	cmd : IF exp $$12 ':' listacmd else ENDIF .  (50)

	.  reduce 50


state 177
	for : FOR IDENT '=' exp $$15 ';' exp . $$16 ';' exp ':' cmd listacmdrep ENDFOR  (66)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)
	$$16 : .  (65)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 65

	$$16  goto 181


state 178
	retorno : RETORNO exp $$11 ';' .  (42)

	.  reduce 42


state 179
	lParametrosMetodo : ',' exp lParametrosMetodo .  (89)

	.  reduce 89


state 180
	else : '[' ELSE ':' . cmd listacmd ']'  (55)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 182
	while  goto 91
	for  goto 92
	metodo  goto 93


state 181
	for : FOR IDENT '=' exp $$15 ';' exp $$16 . ';' exp ':' cmd listacmdrep ENDFOR  (66)

	';'  shift 183
	.  error


state 182
	else : '[' ELSE ':' cmd . listacmd ']'  (55)
	listacmd : .  (44)

	.  reduce 44

	listacmd  goto 184


state 183
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' . exp ':' cmd listacmdrep ENDFOR  (66)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 185
	metodo  goto 93


state 184
	listacmd : listacmd . cmd  (43)
	else : '[' ELSE ':' cmd listacmd . ']'  (55)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	']'  shift 186
	.  error

	exp  goto 89
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 185
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp . ':' cmd listacmdrep ENDFOR  (66)
	exp : exp . '+' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '-' exp  (69)
	exp : exp . '/' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . AND exp  (73)
	exp : exp . OR exp  (74)
	exp : exp . LESSEREQUAL exp  (75)
	exp : exp . GREATEREQUAL exp  (76)
	exp : exp . '=' exp  (84)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	':'  shift 187
	.  error


state 186
	else : '[' ELSE ':' cmd listacmd ']' .  (55)

	.  reduce 55


state 187
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' . cmd listacmdrep ENDFOR  (66)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 188
	while  goto 91
	for  goto 92
	metodo  goto 93


state 188
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' cmd . listacmdrep ENDFOR  (66)
	listacmdrep : .  (47)

	BREAK  shift 159
	IDENT  reduce 47
	NUM  reduce 47
	DOUBLE  reduce 47
	TRUE  reduce 47
	FALSE  reduce 47
	LITERAL  reduce 47
	IF  reduce 47
	WHILE  reduce 47
	FOR  reduce 47
	ENDFOR  reduce 47
	ESCREVA  reduce 47
	LEIA  reduce 47
	'('  reduce 47

	listacmdrep  goto 189


state 189
	listacmdrep : listacmdrep . cmd  (45)
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep . ENDFOR  (66)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ENDFOR  shift 190
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 171
	while  goto 91
	for  goto 92
	metodo  goto 93


state 190
	for : FOR IDENT '=' exp $$15 ';' exp $$16 ';' exp ':' cmd listacmdrep ENDFOR .  (66)

	.  reduce 66


50 terminals, 47 nonterminals
91 grammar rules, 191 states
