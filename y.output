   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 clas

   3  $$2 :

   4  clas : CLASSE IDENT $$2 '{' privados publicos '}'

   5  privados : PRIVATE dList

   6  publicos : PUBLIC mList

   7  $$3 :

   8  dList : type $$3 decl dList
   9        |

  10  decl : IDENT moreDecl ';'

  11  moreDecl : ',' IDENT moreDecl
  12           |

  13  type : INT
  14       | BOOL
  15       | DOUBLE
  16       | STRING
  17       | IDENT

  18  $$4 :

  19  mList : $$4 blocos main

  20  blocos : blocos bl
  21         |

  22  $$5 :

  23  bl : INT IDENT '(' parametros ')' $$5 dList bloco

  24  $$6 :

  25  bl : BOOL IDENT '(' parametros ')' $$6 dList bloco

  26  $$7 :

  27  bl : DOUBLE IDENT '(' parametros ')' $$7 dList bloco

  28  $$8 :

  29  bl : STRING IDENT '(' parametros ')' $$8 dList bloco
  30     | IDENT '(' parametros ')' blocoConstrutor

  31  parametros : type IDENT lParametros
  32             |

  33  lParametros : ',' type IDENT lParametros
  34              |

  35  main : VOID MAIN '(' ')' dList blocoConstrutor
  36       |

  37  blocoConstrutor : '{' listacmd '}'

  38  bloco : '{' listacmd retorno '}'

  39  retorno : RETORNO exp ';'

  40  listacmd : listacmd cmd
  41           |

  42  listacmdrep : listacmdrep cmd
  43              | BREAK
  44              |

  45  cmd : exp ';'

  46  $$9 :

  47  cmd : IF exp $$9 ':' listacmd else ENDIF
  48      | while
  49      | for
  50      | ESCREVA escreva ';'
  51      | LEIA leia ';'

  52  else : '[' ELSE ':' cmd listacmd ']'
  53       |

  54  escreva : exp parametroEscreva

  55  leia : exp

  56  parametroEscreva : ',' exp
  57                   |

  58  $$10 :

  59  while : WHILE exp $$10 cmd listacmdrep ENDWHILE

  60  for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR

  61  atribuicaoFor : type IDENT '=' IDENT
  62                | type IDENT '=' NUM
  63                | type IDENT '=' DOUBLE

  64  exp : exp '+' exp
  65      | exp '*' exp
  66      | exp '-' exp
  67      | exp '/' exp
  68      | exp '>' exp
  69      | exp '<' exp
  70      | exp AND exp
  71      | exp OR exp
  72      | exp LESSEREQUAL exp
  73      | exp GREATEREQUAL exp
  74      | TRUE
  75      | FALSE
  76      | NUM
  77      | DOUBLE
  78      | '(' exp ')'
  79      | LITERAL
  80      | IDENT
  81      | exp '=' exp
  82      | metodo

  83  metodo : IDENT '.' IDENT '(' parametrosMetodo ')'

  84  parametrosMetodo : exp lParametrosMetodo
  85                   |

  86  lParametrosMetodo : ',' exp lParametrosMetodo
  87                    |

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . clas  (2)

	CLASSE  shift 3
	.  error

	clas  goto 4


state 3
	clas : CLASSE . IDENT $$2 '{' privados publicos '}'  (4)

	IDENT  shift 5
	.  error


state 4
	prog : $$1 clas .  (2)

	.  reduce 2


state 5
	clas : CLASSE IDENT . $$2 '{' privados publicos '}'  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 6


state 6
	clas : CLASSE IDENT $$2 . '{' privados publicos '}'  (4)

	'{'  shift 7
	.  error


state 7
	clas : CLASSE IDENT $$2 '{' . privados publicos '}'  (4)

	PRIVATE  shift 8
	.  error

	privados  goto 9


state 8
	privados : PRIVATE . dList  (5)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9

	type  goto 15
	dList  goto 16


state 9
	clas : CLASSE IDENT $$2 '{' privados . publicos '}'  (4)

	PUBLIC  shift 17
	.  error

	publicos  goto 18


state 10
	type : IDENT .  (17)

	.  reduce 17


state 11
	type : INT .  (13)

	.  reduce 13


state 12
	type : BOOL .  (14)

	.  reduce 14


state 13
	type : STRING .  (16)

	.  reduce 16


state 14
	type : DOUBLE .  (15)

	.  reduce 15


state 15
	dList : type . $$3 decl dList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 19


state 16
	privados : PRIVATE dList .  (5)

	.  reduce 5


state 17
	publicos : PUBLIC . mList  (6)
	$$4 : .  (18)

	.  reduce 18

	mList  goto 20
	$$4  goto 21


state 18
	clas : CLASSE IDENT $$2 '{' privados publicos . '}'  (4)

	'}'  shift 22
	.  error


state 19
	dList : type $$3 . decl dList  (8)

	IDENT  shift 23
	.  error

	decl  goto 24


state 20
	publicos : PUBLIC mList .  (6)

	.  reduce 6


state 21
	mList : $$4 . blocos main  (19)
	blocos : .  (21)

	.  reduce 21

	blocos  goto 25


state 22
	clas : CLASSE IDENT $$2 '{' privados publicos '}' .  (4)

	.  reduce 4


state 23
	decl : IDENT . moreDecl ';'  (10)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 27


state 24
	dList : type $$3 decl . dList  (8)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9
	'{'  reduce 9

	type  goto 15
	dList  goto 28


state 25
	mList : $$4 blocos . main  (19)
	blocos : blocos . bl  (20)
	main : .  (36)

	IDENT  shift 29
	INT  shift 30
	BOOL  shift 31
	STRING  shift 32
	DOUBLE  shift 33
	VOID  shift 34
	'}'  reduce 36

	main  goto 35
	bl  goto 36


state 26
	moreDecl : ',' . IDENT moreDecl  (11)

	IDENT  shift 37
	.  error


state 27
	decl : IDENT moreDecl . ';'  (10)

	';'  shift 38
	.  error


state 28
	dList : type $$3 decl dList .  (8)

	.  reduce 8


state 29
	bl : IDENT . '(' parametros ')' blocoConstrutor  (30)

	'('  shift 39
	.  error


state 30
	bl : INT . IDENT '(' parametros ')' $$5 dList bloco  (23)

	IDENT  shift 40
	.  error


state 31
	bl : BOOL . IDENT '(' parametros ')' $$6 dList bloco  (25)

	IDENT  shift 41
	.  error


state 32
	bl : STRING . IDENT '(' parametros ')' $$8 dList bloco  (29)

	IDENT  shift 42
	.  error


state 33
	bl : DOUBLE . IDENT '(' parametros ')' $$7 dList bloco  (27)

	IDENT  shift 43
	.  error


state 34
	main : VOID . MAIN '(' ')' dList blocoConstrutor  (35)

	MAIN  shift 44
	.  error


state 35
	mList : $$4 blocos main .  (19)

	.  reduce 19


state 36
	blocos : blocos bl .  (20)

	.  reduce 20


state 37
	moreDecl : ',' IDENT . moreDecl  (11)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 45


state 38
	decl : IDENT moreDecl ';' .  (10)

	.  reduce 10


state 39
	bl : IDENT '(' . parametros ')' blocoConstrutor  (30)
	parametros : .  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 32

	type  goto 46
	parametros  goto 47


state 40
	bl : INT IDENT . '(' parametros ')' $$5 dList bloco  (23)

	'('  shift 48
	.  error


state 41
	bl : BOOL IDENT . '(' parametros ')' $$6 dList bloco  (25)

	'('  shift 49
	.  error


state 42
	bl : STRING IDENT . '(' parametros ')' $$8 dList bloco  (29)

	'('  shift 50
	.  error


state 43
	bl : DOUBLE IDENT . '(' parametros ')' $$7 dList bloco  (27)

	'('  shift 51
	.  error


state 44
	main : VOID MAIN . '(' ')' dList blocoConstrutor  (35)

	'('  shift 52
	.  error


state 45
	moreDecl : ',' IDENT moreDecl .  (11)

	.  reduce 11


state 46
	parametros : type . IDENT lParametros  (31)

	IDENT  shift 53
	.  error


state 47
	bl : IDENT '(' parametros . ')' blocoConstrutor  (30)

	')'  shift 54
	.  error


state 48
	bl : INT IDENT '(' . parametros ')' $$5 dList bloco  (23)
	parametros : .  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 32

	type  goto 46
	parametros  goto 55


state 49
	bl : BOOL IDENT '(' . parametros ')' $$6 dList bloco  (25)
	parametros : .  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 32

	type  goto 46
	parametros  goto 56


state 50
	bl : STRING IDENT '(' . parametros ')' $$8 dList bloco  (29)
	parametros : .  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 32

	type  goto 46
	parametros  goto 57


state 51
	bl : DOUBLE IDENT '(' . parametros ')' $$7 dList bloco  (27)
	parametros : .  (32)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 32

	type  goto 46
	parametros  goto 58


state 52
	main : VOID MAIN '(' . ')' dList blocoConstrutor  (35)

	')'  shift 59
	.  error


state 53
	parametros : type IDENT . lParametros  (31)
	lParametros : .  (34)

	','  shift 60
	')'  reduce 34

	lParametros  goto 61


state 54
	bl : IDENT '(' parametros ')' . blocoConstrutor  (30)

	'{'  shift 62
	.  error

	blocoConstrutor  goto 63


state 55
	bl : INT IDENT '(' parametros . ')' $$5 dList bloco  (23)

	')'  shift 64
	.  error


state 56
	bl : BOOL IDENT '(' parametros . ')' $$6 dList bloco  (25)

	')'  shift 65
	.  error


state 57
	bl : STRING IDENT '(' parametros . ')' $$8 dList bloco  (29)

	')'  shift 66
	.  error


state 58
	bl : DOUBLE IDENT '(' parametros . ')' $$7 dList bloco  (27)

	')'  shift 67
	.  error


state 59
	main : VOID MAIN '(' ')' . dList blocoConstrutor  (35)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 68


state 60
	lParametros : ',' . type IDENT lParametros  (33)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 69


state 61
	parametros : type IDENT lParametros .  (31)

	.  reduce 31


state 62
	blocoConstrutor : '{' . listacmd '}'  (37)
	listacmd : .  (41)

	.  reduce 41

	listacmd  goto 70


state 63
	bl : IDENT '(' parametros ')' blocoConstrutor .  (30)

	.  reduce 30


state 64
	bl : INT IDENT '(' parametros ')' . $$5 dList bloco  (23)
	$$5 : .  (22)

	.  reduce 22

	$$5  goto 71


state 65
	bl : BOOL IDENT '(' parametros ')' . $$6 dList bloco  (25)
	$$6 : .  (24)

	.  reduce 24

	$$6  goto 72


state 66
	bl : STRING IDENT '(' parametros ')' . $$8 dList bloco  (29)
	$$8 : .  (28)

	.  reduce 28

	$$8  goto 73


state 67
	bl : DOUBLE IDENT '(' parametros ')' . $$7 dList bloco  (27)
	$$7 : .  (26)

	.  reduce 26

	$$7  goto 74


state 68
	main : VOID MAIN '(' ')' dList . blocoConstrutor  (35)

	'{'  shift 62
	.  error

	blocoConstrutor  goto 75


state 69
	lParametros : ',' type . IDENT lParametros  (33)

	IDENT  shift 76
	.  error


state 70
	blocoConstrutor : '{' listacmd . '}'  (37)
	listacmd : listacmd . cmd  (40)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'}'  shift 88
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 91
	while  goto 92
	for  goto 93
	metodo  goto 94


state 71
	bl : INT IDENT '(' parametros ')' $$5 . dList bloco  (23)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 95


state 72
	bl : BOOL IDENT '(' parametros ')' $$6 . dList bloco  (25)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 96


state 73
	bl : STRING IDENT '(' parametros ')' $$8 . dList bloco  (29)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 97


state 74
	bl : DOUBLE IDENT '(' parametros ')' $$7 . dList bloco  (27)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 98


state 75
	main : VOID MAIN '(' ')' dList blocoConstrutor .  (35)

	.  reduce 35


state 76
	lParametros : ',' type IDENT . lParametros  (33)
	lParametros : .  (34)

	','  shift 60
	')'  reduce 34

	lParametros  goto 99


state 77
	exp : IDENT .  (80)
	metodo : IDENT . '.' IDENT '(' parametrosMetodo ')'  (83)

	'.'  shift 100
	IDENT  reduce 80
	NUM  reduce 80
	DOUBLE  reduce 80
	TRUE  reduce 80
	FALSE  reduce 80
	LITERAL  reduce 80
	AND  reduce 80
	IF  reduce 80
	WHILE  reduce 80
	FOR  reduce 80
	ESCREVA  reduce 80
	LEIA  reduce 80
	OR  reduce 80
	GREATEREQUAL  reduce 80
	LESSEREQUAL  reduce 80
	'='  reduce 80
	'>'  reduce 80
	'<'  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'/'  reduce 80
	'*'  reduce 80
	';'  reduce 80
	','  reduce 80
	'('  reduce 80
	')'  reduce 80
	':'  reduce 80


state 78
	exp : NUM .  (76)

	.  reduce 76


state 79
	exp : DOUBLE .  (77)

	.  reduce 77


state 80
	exp : TRUE .  (74)

	.  reduce 74


state 81
	exp : FALSE .  (75)

	.  reduce 75


state 82
	exp : LITERAL .  (79)

	.  reduce 79


state 83
	cmd : IF . exp $$9 ':' listacmd else ENDIF  (47)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 101
	metodo  goto 94


state 84
	while : WHILE . exp $$10 cmd listacmdrep ENDWHILE  (59)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 102
	metodo  goto 94


state 85
	for : FOR . atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR  (60)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 103
	atribuicaoFor  goto 104


state 86
	cmd : ESCREVA . escreva ';'  (50)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 105
	escreva  goto 106
	metodo  goto 94


state 87
	cmd : LEIA . leia ';'  (51)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 107
	leia  goto 108
	metodo  goto 94


state 88
	blocoConstrutor : '{' listacmd '}' .  (37)

	.  reduce 37


state 89
	exp : '(' . exp ')'  (78)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 109
	metodo  goto 94


state 90
	cmd : exp . ';'  (45)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	';'  shift 121
	.  error


state 91
	listacmd : listacmd cmd .  (40)

	.  reduce 40


state 92
	cmd : while .  (48)

	.  reduce 48


state 93
	cmd : for .  (49)

	.  reduce 49


state 94
	exp : metodo .  (82)

	.  reduce 82


state 95
	bl : INT IDENT '(' parametros ')' $$5 dList . bloco  (23)

	'{'  shift 122
	.  error

	bloco  goto 123


state 96
	bl : BOOL IDENT '(' parametros ')' $$6 dList . bloco  (25)

	'{'  shift 122
	.  error

	bloco  goto 124


state 97
	bl : STRING IDENT '(' parametros ')' $$8 dList . bloco  (29)

	'{'  shift 122
	.  error

	bloco  goto 125


state 98
	bl : DOUBLE IDENT '(' parametros ')' $$7 dList . bloco  (27)

	'{'  shift 122
	.  error

	bloco  goto 126


state 99
	lParametros : ',' type IDENT lParametros .  (33)

	.  reduce 33


state 100
	metodo : IDENT '.' . IDENT '(' parametrosMetodo ')'  (83)

	IDENT  shift 127
	.  error


state 101
	cmd : IF exp . $$9 ':' listacmd else ENDIF  (47)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	$$9 : .  (46)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	':'  reduce 46

	$$9  goto 128


state 102
	while : WHILE exp . $$10 cmd listacmdrep ENDWHILE  (59)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	$$10 : .  (58)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 58
	NUM  reduce 58
	DOUBLE  reduce 58
	TRUE  reduce 58
	FALSE  reduce 58
	LITERAL  reduce 58
	IF  reduce 58
	WHILE  reduce 58
	FOR  reduce 58
	ESCREVA  reduce 58
	LEIA  reduce 58
	'('  reduce 58

	$$10  goto 129


state 103
	atribuicaoFor : type . IDENT '=' IDENT  (61)
	atribuicaoFor : type . IDENT '=' NUM  (62)
	atribuicaoFor : type . IDENT '=' DOUBLE  (63)

	IDENT  shift 130
	.  error


state 104
	for : FOR atribuicaoFor . ';' exp ';' exp ':' cmd listacmdrep ENDFOR  (60)

	';'  shift 131
	.  error


state 105
	escreva : exp . parametroEscreva  (54)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	parametroEscreva : .  (57)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	','  shift 132
	';'  reduce 57

	parametroEscreva  goto 133


state 106
	cmd : ESCREVA escreva . ';'  (50)

	';'  shift 134
	.  error


state 107
	leia : exp .  (55)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	';'  reduce 55


state 108
	cmd : LEIA leia . ';'  (51)

	';'  shift 135
	.  error


state 109
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : '(' exp . ')'  (78)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	')'  shift 136
	.  error


state 110
	exp : exp AND . exp  (70)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 137
	metodo  goto 94


state 111
	exp : exp OR . exp  (71)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 138
	metodo  goto 94


state 112
	exp : exp GREATEREQUAL . exp  (73)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 139
	metodo  goto 94


state 113
	exp : exp LESSEREQUAL . exp  (72)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 140
	metodo  goto 94


state 114
	exp : exp '=' . exp  (81)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 141
	metodo  goto 94


state 115
	exp : exp '>' . exp  (68)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 142
	metodo  goto 94


state 116
	exp : exp '<' . exp  (69)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 143
	metodo  goto 94


state 117
	exp : exp '+' . exp  (64)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 144
	metodo  goto 94


state 118
	exp : exp '-' . exp  (66)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 145
	metodo  goto 94


state 119
	exp : exp '/' . exp  (67)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 146
	metodo  goto 94


state 120
	exp : exp '*' . exp  (65)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 147
	metodo  goto 94


state 121
	cmd : exp ';' .  (45)

	.  reduce 45


state 122
	bloco : '{' . listacmd retorno '}'  (38)
	listacmd : .  (41)

	.  reduce 41

	listacmd  goto 148


state 123
	bl : INT IDENT '(' parametros ')' $$5 dList bloco .  (23)

	.  reduce 23


state 124
	bl : BOOL IDENT '(' parametros ')' $$6 dList bloco .  (25)

	.  reduce 25


state 125
	bl : STRING IDENT '(' parametros ')' $$8 dList bloco .  (29)

	.  reduce 29


state 126
	bl : DOUBLE IDENT '(' parametros ')' $$7 dList bloco .  (27)

	.  reduce 27


state 127
	metodo : IDENT '.' IDENT . '(' parametrosMetodo ')'  (83)

	'('  shift 149
	.  error


state 128
	cmd : IF exp $$9 . ':' listacmd else ENDIF  (47)

	':'  shift 150
	.  error


state 129
	while : WHILE exp $$10 . cmd listacmdrep ENDWHILE  (59)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 151
	while  goto 92
	for  goto 93
	metodo  goto 94


state 130
	atribuicaoFor : type IDENT . '=' IDENT  (61)
	atribuicaoFor : type IDENT . '=' NUM  (62)
	atribuicaoFor : type IDENT . '=' DOUBLE  (63)

	'='  shift 152
	.  error


state 131
	for : FOR atribuicaoFor ';' . exp ';' exp ':' cmd listacmdrep ENDFOR  (60)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 153
	metodo  goto 94


state 132
	parametroEscreva : ',' . exp  (56)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 154
	metodo  goto 94


state 133
	escreva : exp parametroEscreva .  (54)

	.  reduce 54


state 134
	cmd : ESCREVA escreva ';' .  (50)

	.  reduce 50


state 135
	cmd : LEIA leia ';' .  (51)

	.  reduce 51


state 136
	exp : '(' exp ')' .  (78)

	.  reduce 78


state 137
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp AND exp .  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	.  reduce 70


state 138
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp OR exp .  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	.  reduce 71


state 139
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp GREATEREQUAL exp .  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 73
	NUM  reduce 73
	DOUBLE  reduce 73
	TRUE  reduce 73
	FALSE  reduce 73
	LITERAL  reduce 73
	IF  reduce 73
	WHILE  reduce 73
	FOR  reduce 73
	ESCREVA  reduce 73
	LEIA  reduce 73
	'='  reduce 73
	';'  reduce 73
	','  reduce 73
	'('  reduce 73
	')'  reduce 73
	':'  reduce 73


state 140
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp LESSEREQUAL exp .  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 72
	NUM  reduce 72
	DOUBLE  reduce 72
	TRUE  reduce 72
	FALSE  reduce 72
	LITERAL  reduce 72
	IF  reduce 72
	WHILE  reduce 72
	FOR  reduce 72
	ESCREVA  reduce 72
	LEIA  reduce 72
	'='  reduce 72
	';'  reduce 72
	','  reduce 72
	'('  reduce 72
	')'  reduce 72
	':'  reduce 72


state 141
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	exp : exp '=' exp .  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 81
	NUM  reduce 81
	DOUBLE  reduce 81
	TRUE  reduce 81
	FALSE  reduce 81
	LITERAL  reduce 81
	IF  reduce 81
	WHILE  reduce 81
	FOR  reduce 81
	ESCREVA  reduce 81
	LEIA  reduce 81
	';'  reduce 81
	','  reduce 81
	'('  reduce 81
	')'  reduce 81
	':'  reduce 81


state 142
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp '>' exp .  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 68
	NUM  reduce 68
	DOUBLE  reduce 68
	TRUE  reduce 68
	FALSE  reduce 68
	LITERAL  reduce 68
	IF  reduce 68
	WHILE  reduce 68
	FOR  reduce 68
	ESCREVA  reduce 68
	LEIA  reduce 68
	'='  reduce 68
	';'  reduce 68
	','  reduce 68
	'('  reduce 68
	')'  reduce 68
	':'  reduce 68


state 143
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp '<' exp .  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 69
	NUM  reduce 69
	DOUBLE  reduce 69
	TRUE  reduce 69
	FALSE  reduce 69
	LITERAL  reduce 69
	IF  reduce 69
	WHILE  reduce 69
	FOR  reduce 69
	ESCREVA  reduce 69
	LEIA  reduce 69
	'='  reduce 69
	';'  reduce 69
	','  reduce 69
	'('  reduce 69
	')'  reduce 69
	':'  reduce 69


state 144
	exp : exp . '+' exp  (64)
	exp : exp '+' exp .  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 64
	NUM  reduce 64
	DOUBLE  reduce 64
	TRUE  reduce 64
	FALSE  reduce 64
	LITERAL  reduce 64
	IF  reduce 64
	WHILE  reduce 64
	FOR  reduce 64
	ESCREVA  reduce 64
	LEIA  reduce 64
	GREATEREQUAL  reduce 64
	LESSEREQUAL  reduce 64
	'='  reduce 64
	'>'  reduce 64
	'<'  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	';'  reduce 64
	','  reduce 64
	'('  reduce 64
	')'  reduce 64
	':'  reduce 64


state 145
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp '-' exp .  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	'/'  shift 119
	'*'  shift 120
	IDENT  reduce 66
	NUM  reduce 66
	DOUBLE  reduce 66
	TRUE  reduce 66
	FALSE  reduce 66
	LITERAL  reduce 66
	IF  reduce 66
	WHILE  reduce 66
	FOR  reduce 66
	ESCREVA  reduce 66
	LEIA  reduce 66
	GREATEREQUAL  reduce 66
	LESSEREQUAL  reduce 66
	'='  reduce 66
	'>'  reduce 66
	'<'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	';'  reduce 66
	','  reduce 66
	'('  reduce 66
	')'  reduce 66
	':'  reduce 66


state 146
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp '/' exp .  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	IDENT  reduce 67
	NUM  reduce 67
	DOUBLE  reduce 67
	TRUE  reduce 67
	FALSE  reduce 67
	LITERAL  reduce 67
	IF  reduce 67
	WHILE  reduce 67
	FOR  reduce 67
	ESCREVA  reduce 67
	LEIA  reduce 67
	GREATEREQUAL  reduce 67
	LESSEREQUAL  reduce 67
	'='  reduce 67
	'>'  reduce 67
	'<'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'/'  reduce 67
	'*'  reduce 67
	';'  reduce 67
	','  reduce 67
	'('  reduce 67
	')'  reduce 67
	':'  reduce 67


state 147
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp '*' exp .  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	IDENT  reduce 65
	NUM  reduce 65
	DOUBLE  reduce 65
	TRUE  reduce 65
	FALSE  reduce 65
	LITERAL  reduce 65
	IF  reduce 65
	WHILE  reduce 65
	FOR  reduce 65
	ESCREVA  reduce 65
	LEIA  reduce 65
	GREATEREQUAL  reduce 65
	LESSEREQUAL  reduce 65
	'='  reduce 65
	'>'  reduce 65
	'<'  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	'/'  reduce 65
	'*'  reduce 65
	';'  reduce 65
	','  reduce 65
	'('  reduce 65
	')'  reduce 65
	':'  reduce 65


state 148
	bloco : '{' listacmd . retorno '}'  (38)
	listacmd : listacmd . cmd  (40)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	RETORNO  shift 155
	'('  shift 89
	.  error

	exp  goto 90
	retorno  goto 156
	cmd  goto 91
	while  goto 92
	for  goto 93
	metodo  goto 94


state 149
	metodo : IDENT '.' IDENT '(' . parametrosMetodo ')'  (83)
	parametrosMetodo : .  (85)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	')'  reduce 85

	exp  goto 157
	metodo  goto 94
	parametrosMetodo  goto 158


state 150
	cmd : IF exp $$9 ':' . listacmd else ENDIF  (47)
	listacmd : .  (41)

	.  reduce 41

	listacmd  goto 159


state 151
	while : WHILE exp $$10 cmd . listacmdrep ENDWHILE  (59)
	listacmdrep : .  (44)

	BREAK  shift 160
	IDENT  reduce 44
	NUM  reduce 44
	DOUBLE  reduce 44
	TRUE  reduce 44
	FALSE  reduce 44
	LITERAL  reduce 44
	IF  reduce 44
	WHILE  reduce 44
	ENDWHILE  reduce 44
	FOR  reduce 44
	ESCREVA  reduce 44
	LEIA  reduce 44
	'('  reduce 44

	listacmdrep  goto 161


state 152
	atribuicaoFor : type IDENT '=' . IDENT  (61)
	atribuicaoFor : type IDENT '=' . NUM  (62)
	atribuicaoFor : type IDENT '=' . DOUBLE  (63)

	IDENT  shift 162
	NUM  shift 163
	DOUBLE  shift 164
	.  error


state 153
	for : FOR atribuicaoFor ';' exp . ';' exp ':' cmd listacmdrep ENDFOR  (60)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	';'  shift 165
	.  error


state 154
	parametroEscreva : ',' exp .  (56)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	';'  reduce 56


state 155
	retorno : RETORNO . exp ';'  (39)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 166
	metodo  goto 94


state 156
	bloco : '{' listacmd retorno . '}'  (38)

	'}'  shift 167
	.  error


state 157
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	parametrosMetodo : exp . lParametrosMetodo  (84)
	lParametrosMetodo : .  (87)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	','  shift 168
	')'  reduce 87

	lParametrosMetodo  goto 169


state 158
	metodo : IDENT '.' IDENT '(' parametrosMetodo . ')'  (83)

	')'  shift 170
	.  error


state 159
	listacmd : listacmd . cmd  (40)
	cmd : IF exp $$9 ':' listacmd . else ENDIF  (47)
	else : .  (53)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'['  shift 171
	'('  shift 89
	ENDIF  reduce 53

	exp  goto 90
	cmd  goto 91
	else  goto 172
	while  goto 92
	for  goto 93
	metodo  goto 94


state 160
	listacmdrep : BREAK .  (43)

	.  reduce 43


state 161
	listacmdrep : listacmdrep . cmd  (42)
	while : WHILE exp $$10 cmd listacmdrep . ENDWHILE  (59)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	ENDWHILE  shift 173
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 174
	while  goto 92
	for  goto 93
	metodo  goto 94


state 162
	atribuicaoFor : type IDENT '=' IDENT .  (61)

	.  reduce 61


state 163
	atribuicaoFor : type IDENT '=' NUM .  (62)

	.  reduce 62


state 164
	atribuicaoFor : type IDENT '=' DOUBLE .  (63)

	.  reduce 63


state 165
	for : FOR atribuicaoFor ';' exp ';' . exp ':' cmd listacmdrep ENDFOR  (60)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 175
	metodo  goto 94


state 166
	retorno : RETORNO exp . ';'  (39)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	';'  shift 176
	.  error


state 167
	bloco : '{' listacmd retorno '}' .  (38)

	.  reduce 38


state 168
	lParametrosMetodo : ',' . exp lParametrosMetodo  (86)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	'('  shift 89
	.  error

	exp  goto 177
	metodo  goto 94


state 169
	parametrosMetodo : exp lParametrosMetodo .  (84)

	.  reduce 84


state 170
	metodo : IDENT '.' IDENT '(' parametrosMetodo ')' .  (83)

	.  reduce 83


state 171
	else : '[' . ELSE ':' cmd listacmd ']'  (52)

	ELSE  shift 178
	.  error


state 172
	cmd : IF exp $$9 ':' listacmd else . ENDIF  (47)

	ENDIF  shift 179
	.  error


state 173
	while : WHILE exp $$10 cmd listacmdrep ENDWHILE .  (59)

	.  reduce 59


state 174
	listacmdrep : listacmdrep cmd .  (42)

	.  reduce 42


state 175
	for : FOR atribuicaoFor ';' exp ';' exp . ':' cmd listacmdrep ENDFOR  (60)
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	':'  shift 180
	.  error


state 176
	retorno : RETORNO exp ';' .  (39)

	.  reduce 39


state 177
	exp : exp . '+' exp  (64)
	exp : exp . '*' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '/' exp  (67)
	exp : exp . '>' exp  (68)
	exp : exp . '<' exp  (69)
	exp : exp . AND exp  (70)
	exp : exp . OR exp  (71)
	exp : exp . LESSEREQUAL exp  (72)
	exp : exp . GREATEREQUAL exp  (73)
	exp : exp . '=' exp  (81)
	lParametrosMetodo : ',' exp . lParametrosMetodo  (86)
	lParametrosMetodo : .  (87)

	AND  shift 110
	OR  shift 111
	GREATEREQUAL  shift 112
	LESSEREQUAL  shift 113
	'='  shift 114
	'>'  shift 115
	'<'  shift 116
	'+'  shift 117
	'-'  shift 118
	'/'  shift 119
	'*'  shift 120
	','  shift 168
	')'  reduce 87

	lParametrosMetodo  goto 181


state 178
	else : '[' ELSE . ':' cmd listacmd ']'  (52)

	':'  shift 182
	.  error


state 179
	cmd : IF exp $$9 ':' listacmd else ENDIF .  (47)

	.  reduce 47


state 180
	for : FOR atribuicaoFor ';' exp ';' exp ':' . cmd listacmdrep ENDFOR  (60)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 183
	while  goto 92
	for  goto 93
	metodo  goto 94


state 181
	lParametrosMetodo : ',' exp lParametrosMetodo .  (86)

	.  reduce 86


state 182
	else : '[' ELSE ':' . cmd listacmd ']'  (52)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 184
	while  goto 92
	for  goto 93
	metodo  goto 94


state 183
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd . listacmdrep ENDFOR  (60)
	listacmdrep : .  (44)

	BREAK  shift 160
	IDENT  reduce 44
	NUM  reduce 44
	DOUBLE  reduce 44
	TRUE  reduce 44
	FALSE  reduce 44
	LITERAL  reduce 44
	IF  reduce 44
	WHILE  reduce 44
	FOR  reduce 44
	ENDFOR  reduce 44
	ESCREVA  reduce 44
	LEIA  reduce 44
	'('  reduce 44

	listacmdrep  goto 185


state 184
	else : '[' ELSE ':' cmd . listacmd ']'  (52)
	listacmd : .  (41)

	.  reduce 41

	listacmd  goto 186


state 185
	listacmdrep : listacmdrep . cmd  (42)
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep . ENDFOR  (60)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ENDFOR  shift 187
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	.  error

	exp  goto 90
	cmd  goto 174
	while  goto 92
	for  goto 93
	metodo  goto 94


state 186
	listacmd : listacmd . cmd  (40)
	else : '[' ELSE ':' cmd listacmd . ']'  (52)

	IDENT  shift 77
	NUM  shift 78
	DOUBLE  shift 79
	TRUE  shift 80
	FALSE  shift 81
	LITERAL  shift 82
	IF  shift 83
	WHILE  shift 84
	FOR  shift 85
	ESCREVA  shift 86
	LEIA  shift 87
	'('  shift 89
	']'  shift 188
	.  error

	exp  goto 90
	cmd  goto 91
	while  goto 92
	for  goto 93
	metodo  goto 94


state 187
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR .  (60)

	.  reduce 60


state 188
	else : '[' ELSE ':' cmd listacmd ']' .  (52)

	.  reduce 52


50 terminals, 42 nonterminals
88 grammar rules, 189 states
