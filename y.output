   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 clas

   3  $$2 :

   4  clas : CLASSE IDENT $$2 '{' privados publicos '}'

   5  privados : PRIVATE dList

   6  publicos : PUBLIC mList

   7  $$3 :

   8  dList : type $$3 decl dList
   9        |

  10  decl : IDENT moreDecl ';'

  11  moreDecl : ',' IDENT moreDecl
  12           |

  13  type : INT
  14       | BOOL
  15       | DOUBLE
  16       | STRING
  17       | IDENT

  18  $$4 :

  19  mList : $$4 blocos main

  20  blocos : blocos bl
  21         |

  22  $$5 :

  23  $$6 :

  24  bl : INT IDENT $$5 '(' parametros ')' $$6 dList bloco

  25  $$7 :

  26  $$8 :

  27  bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList bloco

  28  $$9 :

  29  $$10 :

  30  bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList bloco

  31  $$11 :

  32  $$12 :

  33  bl : STRING IDENT $$11 '(' parametros ')' $$12 dList bloco
  34     | IDENT '(' parametros ')' blocoConstrutor

  35  $$13 :

  36  parametros : $$13 type IDENT lParametros
  37             |

  38  $$14 :

  39  lParametros : $$14 ',' type IDENT lParametros
  40              |

  41  main : VOID MAIN '(' ')' dList blocoConstrutor
  42       |

  43  blocoConstrutor : '{' listacmd '}'

  44  bloco : '{' listacmd retorno '}'

  45  $$15 :

  46  retorno : RETORNO exp $$15 ';'

  47  listacmd : listacmd cmd
  48           |

  49  listacmdrep : listacmdrep cmd
  50              | BREAK
  51              |

  52  cmd : exp ';'

  53  $$16 :

  54  cmd : IF exp $$16 ':' listacmd else ENDIF
  55      | while
  56      | for
  57      | ESCREVA escreva ';'
  58      | LEIA leia ';'

  59  else : '[' ELSE ':' cmd listacmd ']'
  60       |

  61  $$17 :

  62  escreva : exp $$17 parametroEscreva

  63  leia : exp

  64  parametroEscreva : ',' exp
  65                   |

  66  $$18 :

  67  while : WHILE exp $$18 cmd listacmdrep ENDWHILE

  68  $$19 :

  69  $$20 :

  70  for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR

  71  exp : exp '+' exp
  72      | exp '*' exp
  73      | exp '-' exp
  74      | exp '/' exp
  75      | exp '>' exp
  76      | exp '<' exp
  77      | exp AND exp
  78      | exp OR exp
  79      | exp LESSEREQUAL exp
  80      | exp GREATEREQUAL exp
  81      | TRUE
  82      | FALSE
  83      | NUM
  84      | DOUBLE
  85      | '(' exp ')'
  86      | LITERAL
  87      | IDENT
  88      | exp '=' exp
  89      | metodo

  90  metodo : IDENT '.' IDENT '(' parametrosMetodo ')'

  91  parametrosMetodo : exp lParametrosMetodo
  92                   |

  93  lParametrosMetodo : ',' exp lParametrosMetodo
  94                    |

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . clas  (2)

	CLASSE  shift 3
	.  error

	clas  goto 4


state 3
	clas : CLASSE . IDENT $$2 '{' privados publicos '}'  (4)

	IDENT  shift 5
	.  error


state 4
	prog : $$1 clas .  (2)

	.  reduce 2


state 5
	clas : CLASSE IDENT . $$2 '{' privados publicos '}'  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 6


state 6
	clas : CLASSE IDENT $$2 . '{' privados publicos '}'  (4)

	'{'  shift 7
	.  error


state 7
	clas : CLASSE IDENT $$2 '{' . privados publicos '}'  (4)

	PRIVATE  shift 8
	.  error

	privados  goto 9


state 8
	privados : PRIVATE . dList  (5)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9

	type  goto 15
	dList  goto 16


state 9
	clas : CLASSE IDENT $$2 '{' privados . publicos '}'  (4)

	PUBLIC  shift 17
	.  error

	publicos  goto 18


state 10
	type : IDENT .  (17)

	.  reduce 17


state 11
	type : INT .  (13)

	.  reduce 13


state 12
	type : BOOL .  (14)

	.  reduce 14


state 13
	type : STRING .  (16)

	.  reduce 16


state 14
	type : DOUBLE .  (15)

	.  reduce 15


state 15
	dList : type . $$3 decl dList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 19


state 16
	privados : PRIVATE dList .  (5)

	.  reduce 5


state 17
	publicos : PUBLIC . mList  (6)
	$$4 : .  (18)

	.  reduce 18

	mList  goto 20
	$$4  goto 21


state 18
	clas : CLASSE IDENT $$2 '{' privados publicos . '}'  (4)

	'}'  shift 22
	.  error


state 19
	dList : type $$3 . decl dList  (8)

	IDENT  shift 23
	.  error

	decl  goto 24


state 20
	publicos : PUBLIC mList .  (6)

	.  reduce 6


state 21
	mList : $$4 . blocos main  (19)
	blocos : .  (21)

	.  reduce 21

	blocos  goto 25


state 22
	clas : CLASSE IDENT $$2 '{' privados publicos '}' .  (4)

	.  reduce 4


state 23
	decl : IDENT . moreDecl ';'  (10)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 27


state 24
	dList : type $$3 decl . dList  (8)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9
	'{'  reduce 9

	type  goto 15
	dList  goto 28


state 25
	mList : $$4 blocos . main  (19)
	blocos : blocos . bl  (20)
	main : .  (42)

	IDENT  shift 29
	INT  shift 30
	BOOL  shift 31
	STRING  shift 32
	DOUBLE  shift 33
	VOID  shift 34
	'}'  reduce 42

	main  goto 35
	bl  goto 36


state 26
	moreDecl : ',' . IDENT moreDecl  (11)

	IDENT  shift 37
	.  error


state 27
	decl : IDENT moreDecl . ';'  (10)

	';'  shift 38
	.  error


state 28
	dList : type $$3 decl dList .  (8)

	.  reduce 8


state 29
	bl : IDENT . '(' parametros ')' blocoConstrutor  (34)

	'('  shift 39
	.  error


state 30
	bl : INT . IDENT $$5 '(' parametros ')' $$6 dList bloco  (24)

	IDENT  shift 40
	.  error


state 31
	bl : BOOL . IDENT $$7 '(' parametros ')' $$8 dList bloco  (27)

	IDENT  shift 41
	.  error


state 32
	bl : STRING . IDENT $$11 '(' parametros ')' $$12 dList bloco  (33)

	IDENT  shift 42
	.  error


state 33
	bl : DOUBLE . IDENT $$9 '(' parametros ')' $$10 dList bloco  (30)

	IDENT  shift 43
	.  error


state 34
	main : VOID . MAIN '(' ')' dList blocoConstrutor  (41)

	MAIN  shift 44
	.  error


state 35
	mList : $$4 blocos main .  (19)

	.  reduce 19


state 36
	blocos : blocos bl .  (20)

	.  reduce 20


state 37
	moreDecl : ',' IDENT . moreDecl  (11)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 45


state 38
	decl : IDENT moreDecl ';' .  (10)

	.  reduce 10


state 39
	bl : IDENT '(' . parametros ')' blocoConstrutor  (34)
	$$13 : .  (35)
	parametros : .  (37)

	IDENT  reduce 35
	INT  reduce 35
	BOOL  reduce 35
	STRING  reduce 35
	DOUBLE  reduce 35
	')'  reduce 37

	parametros  goto 46
	$$13  goto 47


state 40
	bl : INT IDENT . $$5 '(' parametros ')' $$6 dList bloco  (24)
	$$5 : .  (22)

	.  reduce 22

	$$5  goto 48


state 41
	bl : BOOL IDENT . $$7 '(' parametros ')' $$8 dList bloco  (27)
	$$7 : .  (25)

	.  reduce 25

	$$7  goto 49


state 42
	bl : STRING IDENT . $$11 '(' parametros ')' $$12 dList bloco  (33)
	$$11 : .  (31)

	.  reduce 31

	$$11  goto 50


state 43
	bl : DOUBLE IDENT . $$9 '(' parametros ')' $$10 dList bloco  (30)
	$$9 : .  (28)

	.  reduce 28

	$$9  goto 51


state 44
	main : VOID MAIN . '(' ')' dList blocoConstrutor  (41)

	'('  shift 52
	.  error


state 45
	moreDecl : ',' IDENT moreDecl .  (11)

	.  reduce 11


state 46
	bl : IDENT '(' parametros . ')' blocoConstrutor  (34)

	')'  shift 53
	.  error


state 47
	parametros : $$13 . type IDENT lParametros  (36)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 54


state 48
	bl : INT IDENT $$5 . '(' parametros ')' $$6 dList bloco  (24)

	'('  shift 55
	.  error


state 49
	bl : BOOL IDENT $$7 . '(' parametros ')' $$8 dList bloco  (27)

	'('  shift 56
	.  error


state 50
	bl : STRING IDENT $$11 . '(' parametros ')' $$12 dList bloco  (33)

	'('  shift 57
	.  error


state 51
	bl : DOUBLE IDENT $$9 . '(' parametros ')' $$10 dList bloco  (30)

	'('  shift 58
	.  error


state 52
	main : VOID MAIN '(' . ')' dList blocoConstrutor  (41)

	')'  shift 59
	.  error


state 53
	bl : IDENT '(' parametros ')' . blocoConstrutor  (34)

	'{'  shift 60
	.  error

	blocoConstrutor  goto 61


state 54
	parametros : $$13 type . IDENT lParametros  (36)

	IDENT  shift 62
	.  error


state 55
	bl : INT IDENT $$5 '(' . parametros ')' $$6 dList bloco  (24)
	$$13 : .  (35)
	parametros : .  (37)

	IDENT  reduce 35
	INT  reduce 35
	BOOL  reduce 35
	STRING  reduce 35
	DOUBLE  reduce 35
	')'  reduce 37

	parametros  goto 63
	$$13  goto 47


state 56
	bl : BOOL IDENT $$7 '(' . parametros ')' $$8 dList bloco  (27)
	$$13 : .  (35)
	parametros : .  (37)

	IDENT  reduce 35
	INT  reduce 35
	BOOL  reduce 35
	STRING  reduce 35
	DOUBLE  reduce 35
	')'  reduce 37

	parametros  goto 64
	$$13  goto 47


state 57
	bl : STRING IDENT $$11 '(' . parametros ')' $$12 dList bloco  (33)
	$$13 : .  (35)
	parametros : .  (37)

	IDENT  reduce 35
	INT  reduce 35
	BOOL  reduce 35
	STRING  reduce 35
	DOUBLE  reduce 35
	')'  reduce 37

	parametros  goto 65
	$$13  goto 47


state 58
	bl : DOUBLE IDENT $$9 '(' . parametros ')' $$10 dList bloco  (30)
	$$13 : .  (35)
	parametros : .  (37)

	IDENT  reduce 35
	INT  reduce 35
	BOOL  reduce 35
	STRING  reduce 35
	DOUBLE  reduce 35
	')'  reduce 37

	parametros  goto 66
	$$13  goto 47


state 59
	main : VOID MAIN '(' ')' . dList blocoConstrutor  (41)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 67


state 60
	blocoConstrutor : '{' . listacmd '}'  (43)
	listacmd : .  (48)

	.  reduce 48

	listacmd  goto 68


state 61
	bl : IDENT '(' parametros ')' blocoConstrutor .  (34)

	.  reduce 34


state 62
	parametros : $$13 type IDENT . lParametros  (36)
	$$14 : .  (38)
	lParametros : .  (40)

	','  reduce 38
	')'  reduce 40

	lParametros  goto 69
	$$14  goto 70


state 63
	bl : INT IDENT $$5 '(' parametros . ')' $$6 dList bloco  (24)

	')'  shift 71
	.  error


state 64
	bl : BOOL IDENT $$7 '(' parametros . ')' $$8 dList bloco  (27)

	')'  shift 72
	.  error


state 65
	bl : STRING IDENT $$11 '(' parametros . ')' $$12 dList bloco  (33)

	')'  shift 73
	.  error


state 66
	bl : DOUBLE IDENT $$9 '(' parametros . ')' $$10 dList bloco  (30)

	')'  shift 74
	.  error


state 67
	main : VOID MAIN '(' ')' dList . blocoConstrutor  (41)

	'{'  shift 60
	.  error

	blocoConstrutor  goto 75


state 68
	blocoConstrutor : '{' listacmd . '}'  (43)
	listacmd : listacmd . cmd  (47)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'}'  shift 87
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 69
	parametros : $$13 type IDENT lParametros .  (36)

	.  reduce 36


state 70
	lParametros : $$14 . ',' type IDENT lParametros  (39)

	','  shift 94
	.  error


state 71
	bl : INT IDENT $$5 '(' parametros ')' . $$6 dList bloco  (24)
	$$6 : .  (23)

	.  reduce 23

	$$6  goto 95


state 72
	bl : BOOL IDENT $$7 '(' parametros ')' . $$8 dList bloco  (27)
	$$8 : .  (26)

	.  reduce 26

	$$8  goto 96


state 73
	bl : STRING IDENT $$11 '(' parametros ')' . $$12 dList bloco  (33)
	$$12 : .  (32)

	.  reduce 32

	$$12  goto 97


state 74
	bl : DOUBLE IDENT $$9 '(' parametros ')' . $$10 dList bloco  (30)
	$$10 : .  (29)

	.  reduce 29

	$$10  goto 98


state 75
	main : VOID MAIN '(' ')' dList blocoConstrutor .  (41)

	.  reduce 41


state 76
	exp : IDENT .  (87)
	metodo : IDENT . '.' IDENT '(' parametrosMetodo ')'  (90)

	'.'  shift 99
	IDENT  reduce 87
	NUM  reduce 87
	DOUBLE  reduce 87
	TRUE  reduce 87
	FALSE  reduce 87
	LITERAL  reduce 87
	AND  reduce 87
	IF  reduce 87
	WHILE  reduce 87
	FOR  reduce 87
	ESCREVA  reduce 87
	LEIA  reduce 87
	OR  reduce 87
	GREATEREQUAL  reduce 87
	LESSEREQUAL  reduce 87
	'='  reduce 87
	'>'  reduce 87
	'<'  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'/'  reduce 87
	'*'  reduce 87
	';'  reduce 87
	','  reduce 87
	'('  reduce 87
	')'  reduce 87
	':'  reduce 87


state 77
	exp : NUM .  (83)

	.  reduce 83


state 78
	exp : DOUBLE .  (84)

	.  reduce 84


state 79
	exp : TRUE .  (81)

	.  reduce 81


state 80
	exp : FALSE .  (82)

	.  reduce 82


state 81
	exp : LITERAL .  (86)

	.  reduce 86


state 82
	cmd : IF . exp $$16 ':' listacmd else ENDIF  (54)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 100
	metodo  goto 93


state 83
	while : WHILE . exp $$18 cmd listacmdrep ENDWHILE  (67)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 101
	metodo  goto 93


state 84
	for : FOR . IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)

	IDENT  shift 102
	.  error


state 85
	cmd : ESCREVA . escreva ';'  (57)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 103
	escreva  goto 104
	metodo  goto 93


state 86
	cmd : LEIA . leia ';'  (58)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 105
	leia  goto 106
	metodo  goto 93


state 87
	blocoConstrutor : '{' listacmd '}' .  (43)

	.  reduce 43


state 88
	exp : '(' . exp ')'  (85)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 107
	metodo  goto 93


state 89
	cmd : exp . ';'  (52)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  shift 119
	.  error


state 90
	listacmd : listacmd cmd .  (47)

	.  reduce 47


state 91
	cmd : while .  (55)

	.  reduce 55


state 92
	cmd : for .  (56)

	.  reduce 56


state 93
	exp : metodo .  (89)

	.  reduce 89


state 94
	lParametros : $$14 ',' . type IDENT lParametros  (39)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 120


state 95
	bl : INT IDENT $$5 '(' parametros ')' $$6 . dList bloco  (24)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 121


state 96
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 . dList bloco  (27)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 122


state 97
	bl : STRING IDENT $$11 '(' parametros ')' $$12 . dList bloco  (33)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 123


state 98
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 . dList bloco  (30)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 124


state 99
	metodo : IDENT '.' . IDENT '(' parametrosMetodo ')'  (90)

	IDENT  shift 125
	.  error


state 100
	cmd : IF exp . $$16 ':' listacmd else ENDIF  (54)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$16 : .  (53)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	':'  reduce 53

	$$16  goto 126


state 101
	while : WHILE exp . $$18 cmd listacmdrep ENDWHILE  (67)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$18 : .  (66)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 66
	NUM  reduce 66
	DOUBLE  reduce 66
	TRUE  reduce 66
	FALSE  reduce 66
	LITERAL  reduce 66
	IF  reduce 66
	WHILE  reduce 66
	FOR  reduce 66
	ESCREVA  reduce 66
	LEIA  reduce 66
	'('  reduce 66

	$$18  goto 127


state 102
	for : FOR IDENT . '=' exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)

	'='  shift 128
	.  error


state 103
	escreva : exp . $$17 parametroEscreva  (62)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$17 : .  (61)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 61
	','  reduce 61

	$$17  goto 129


state 104
	cmd : ESCREVA escreva . ';'  (57)

	';'  shift 130
	.  error


state 105
	leia : exp .  (63)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 63


state 106
	cmd : LEIA leia . ';'  (58)

	';'  shift 131
	.  error


state 107
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : '(' exp . ')'  (85)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	')'  shift 132
	.  error


state 108
	exp : exp AND . exp  (77)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 133
	metodo  goto 93


state 109
	exp : exp OR . exp  (78)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 134
	metodo  goto 93


state 110
	exp : exp GREATEREQUAL . exp  (80)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 135
	metodo  goto 93


state 111
	exp : exp LESSEREQUAL . exp  (79)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 136
	metodo  goto 93


state 112
	exp : exp '=' . exp  (88)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 137
	metodo  goto 93


state 113
	exp : exp '>' . exp  (75)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 138
	metodo  goto 93


state 114
	exp : exp '<' . exp  (76)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 139
	metodo  goto 93


state 115
	exp : exp '+' . exp  (71)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 140
	metodo  goto 93


state 116
	exp : exp '-' . exp  (73)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 141
	metodo  goto 93


state 117
	exp : exp '/' . exp  (74)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 142
	metodo  goto 93


state 118
	exp : exp '*' . exp  (72)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 143
	metodo  goto 93


state 119
	cmd : exp ';' .  (52)

	.  reduce 52


state 120
	lParametros : $$14 ',' type . IDENT lParametros  (39)

	IDENT  shift 144
	.  error


state 121
	bl : INT IDENT $$5 '(' parametros ')' $$6 dList . bloco  (24)

	'{'  shift 145
	.  error

	bloco  goto 146


state 122
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList . bloco  (27)

	'{'  shift 145
	.  error

	bloco  goto 147


state 123
	bl : STRING IDENT $$11 '(' parametros ')' $$12 dList . bloco  (33)

	'{'  shift 145
	.  error

	bloco  goto 148


state 124
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList . bloco  (30)

	'{'  shift 145
	.  error

	bloco  goto 149


state 125
	metodo : IDENT '.' IDENT . '(' parametrosMetodo ')'  (90)

	'('  shift 150
	.  error


state 126
	cmd : IF exp $$16 . ':' listacmd else ENDIF  (54)

	':'  shift 151
	.  error


state 127
	while : WHILE exp $$18 . cmd listacmdrep ENDWHILE  (67)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 152
	while  goto 91
	for  goto 92
	metodo  goto 93


state 128
	for : FOR IDENT '=' . exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 153
	metodo  goto 93


state 129
	escreva : exp $$17 . parametroEscreva  (62)
	parametroEscreva : .  (65)

	','  shift 154
	';'  reduce 65

	parametroEscreva  goto 155


state 130
	cmd : ESCREVA escreva ';' .  (57)

	.  reduce 57


state 131
	cmd : LEIA leia ';' .  (58)

	.  reduce 58


state 132
	exp : '(' exp ')' .  (85)

	.  reduce 85


state 133
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp AND exp .  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	.  reduce 77


state 134
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp OR exp .  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	.  reduce 78


state 135
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp GREATEREQUAL exp .  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 80
	NUM  reduce 80
	DOUBLE  reduce 80
	TRUE  reduce 80
	FALSE  reduce 80
	LITERAL  reduce 80
	IF  reduce 80
	WHILE  reduce 80
	FOR  reduce 80
	ESCREVA  reduce 80
	LEIA  reduce 80
	'='  reduce 80
	';'  reduce 80
	','  reduce 80
	'('  reduce 80
	')'  reduce 80
	':'  reduce 80


state 136
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp LESSEREQUAL exp .  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 79
	NUM  reduce 79
	DOUBLE  reduce 79
	TRUE  reduce 79
	FALSE  reduce 79
	LITERAL  reduce 79
	IF  reduce 79
	WHILE  reduce 79
	FOR  reduce 79
	ESCREVA  reduce 79
	LEIA  reduce 79
	'='  reduce 79
	';'  reduce 79
	','  reduce 79
	'('  reduce 79
	')'  reduce 79
	':'  reduce 79


state 137
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	exp : exp '=' exp .  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 88
	NUM  reduce 88
	DOUBLE  reduce 88
	TRUE  reduce 88
	FALSE  reduce 88
	LITERAL  reduce 88
	IF  reduce 88
	WHILE  reduce 88
	FOR  reduce 88
	ESCREVA  reduce 88
	LEIA  reduce 88
	';'  reduce 88
	','  reduce 88
	'('  reduce 88
	')'  reduce 88
	':'  reduce 88


state 138
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp '>' exp .  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 75
	NUM  reduce 75
	DOUBLE  reduce 75
	TRUE  reduce 75
	FALSE  reduce 75
	LITERAL  reduce 75
	IF  reduce 75
	WHILE  reduce 75
	FOR  reduce 75
	ESCREVA  reduce 75
	LEIA  reduce 75
	'='  reduce 75
	';'  reduce 75
	','  reduce 75
	'('  reduce 75
	')'  reduce 75
	':'  reduce 75


state 139
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp '<' exp .  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 76
	NUM  reduce 76
	DOUBLE  reduce 76
	TRUE  reduce 76
	FALSE  reduce 76
	LITERAL  reduce 76
	IF  reduce 76
	WHILE  reduce 76
	FOR  reduce 76
	ESCREVA  reduce 76
	LEIA  reduce 76
	'='  reduce 76
	';'  reduce 76
	','  reduce 76
	'('  reduce 76
	')'  reduce 76
	':'  reduce 76


state 140
	exp : exp . '+' exp  (71)
	exp : exp '+' exp .  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 71
	NUM  reduce 71
	DOUBLE  reduce 71
	TRUE  reduce 71
	FALSE  reduce 71
	LITERAL  reduce 71
	IF  reduce 71
	WHILE  reduce 71
	FOR  reduce 71
	ESCREVA  reduce 71
	LEIA  reduce 71
	GREATEREQUAL  reduce 71
	LESSEREQUAL  reduce 71
	'='  reduce 71
	'>'  reduce 71
	'<'  reduce 71
	'+'  reduce 71
	'-'  reduce 71
	';'  reduce 71
	','  reduce 71
	'('  reduce 71
	')'  reduce 71
	':'  reduce 71


state 141
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp '-' exp .  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	'/'  shift 117
	'*'  shift 118
	IDENT  reduce 73
	NUM  reduce 73
	DOUBLE  reduce 73
	TRUE  reduce 73
	FALSE  reduce 73
	LITERAL  reduce 73
	IF  reduce 73
	WHILE  reduce 73
	FOR  reduce 73
	ESCREVA  reduce 73
	LEIA  reduce 73
	GREATEREQUAL  reduce 73
	LESSEREQUAL  reduce 73
	'='  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	';'  reduce 73
	','  reduce 73
	'('  reduce 73
	')'  reduce 73
	':'  reduce 73


state 142
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp '/' exp .  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	IDENT  reduce 74
	NUM  reduce 74
	DOUBLE  reduce 74
	TRUE  reduce 74
	FALSE  reduce 74
	LITERAL  reduce 74
	IF  reduce 74
	WHILE  reduce 74
	FOR  reduce 74
	ESCREVA  reduce 74
	LEIA  reduce 74
	GREATEREQUAL  reduce 74
	LESSEREQUAL  reduce 74
	'='  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'/'  reduce 74
	'*'  reduce 74
	';'  reduce 74
	','  reduce 74
	'('  reduce 74
	')'  reduce 74
	':'  reduce 74


state 143
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp '*' exp .  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	IDENT  reduce 72
	NUM  reduce 72
	DOUBLE  reduce 72
	TRUE  reduce 72
	FALSE  reduce 72
	LITERAL  reduce 72
	IF  reduce 72
	WHILE  reduce 72
	FOR  reduce 72
	ESCREVA  reduce 72
	LEIA  reduce 72
	GREATEREQUAL  reduce 72
	LESSEREQUAL  reduce 72
	'='  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'/'  reduce 72
	'*'  reduce 72
	';'  reduce 72
	','  reduce 72
	'('  reduce 72
	')'  reduce 72
	':'  reduce 72


state 144
	lParametros : $$14 ',' type IDENT . lParametros  (39)
	$$14 : .  (38)
	lParametros : .  (40)

	','  reduce 38
	')'  reduce 40

	lParametros  goto 156
	$$14  goto 70


state 145
	bloco : '{' . listacmd retorno '}'  (44)
	listacmd : .  (48)

	.  reduce 48

	listacmd  goto 157


state 146
	bl : INT IDENT $$5 '(' parametros ')' $$6 dList bloco .  (24)

	.  reduce 24


state 147
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList bloco .  (27)

	.  reduce 27


state 148
	bl : STRING IDENT $$11 '(' parametros ')' $$12 dList bloco .  (33)

	.  reduce 33


state 149
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList bloco .  (30)

	.  reduce 30


state 150
	metodo : IDENT '.' IDENT '(' . parametrosMetodo ')'  (90)
	parametrosMetodo : .  (92)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	')'  reduce 92

	exp  goto 158
	metodo  goto 93
	parametrosMetodo  goto 159


state 151
	cmd : IF exp $$16 ':' . listacmd else ENDIF  (54)
	listacmd : .  (48)

	.  reduce 48

	listacmd  goto 160


state 152
	while : WHILE exp $$18 cmd . listacmdrep ENDWHILE  (67)
	listacmdrep : .  (51)

	BREAK  shift 161
	IDENT  reduce 51
	NUM  reduce 51
	DOUBLE  reduce 51
	TRUE  reduce 51
	FALSE  reduce 51
	LITERAL  reduce 51
	IF  reduce 51
	WHILE  reduce 51
	ENDWHILE  reduce 51
	FOR  reduce 51
	ESCREVA  reduce 51
	LEIA  reduce 51
	'('  reduce 51

	listacmdrep  goto 162


state 153
	for : FOR IDENT '=' exp . $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$19 : .  (68)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 68

	$$19  goto 163


state 154
	parametroEscreva : ',' . exp  (64)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 164
	metodo  goto 93


state 155
	escreva : exp $$17 parametroEscreva .  (62)

	.  reduce 62


state 156
	lParametros : $$14 ',' type IDENT lParametros .  (39)

	.  reduce 39


state 157
	bloco : '{' listacmd . retorno '}'  (44)
	listacmd : listacmd . cmd  (47)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	RETORNO  shift 165
	'('  shift 88
	.  error

	exp  goto 89
	retorno  goto 166
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 158
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	parametrosMetodo : exp . lParametrosMetodo  (91)
	lParametrosMetodo : .  (94)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	','  shift 167
	')'  reduce 94

	lParametrosMetodo  goto 168


state 159
	metodo : IDENT '.' IDENT '(' parametrosMetodo . ')'  (90)

	')'  shift 169
	.  error


state 160
	listacmd : listacmd . cmd  (47)
	cmd : IF exp $$16 ':' listacmd . else ENDIF  (54)
	else : .  (60)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'['  shift 170
	'('  shift 88
	ENDIF  reduce 60

	exp  goto 89
	cmd  goto 90
	else  goto 171
	while  goto 91
	for  goto 92
	metodo  goto 93


state 161
	listacmdrep : BREAK .  (50)

	.  reduce 50


state 162
	listacmdrep : listacmdrep . cmd  (49)
	while : WHILE exp $$18 cmd listacmdrep . ENDWHILE  (67)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	ENDWHILE  shift 172
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 173
	while  goto 91
	for  goto 92
	metodo  goto 93


state 163
	for : FOR IDENT '=' exp $$19 . ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)

	';'  shift 174
	.  error


state 164
	parametroEscreva : ',' exp .  (64)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 64


state 165
	retorno : RETORNO . exp $$15 ';'  (46)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 175
	metodo  goto 93


state 166
	bloco : '{' listacmd retorno . '}'  (44)

	'}'  shift 176
	.  error


state 167
	lParametrosMetodo : ',' . exp lParametrosMetodo  (93)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 177
	metodo  goto 93


state 168
	parametrosMetodo : exp lParametrosMetodo .  (91)

	.  reduce 91


state 169
	metodo : IDENT '.' IDENT '(' parametrosMetodo ')' .  (90)

	.  reduce 90


state 170
	else : '[' . ELSE ':' cmd listacmd ']'  (59)

	ELSE  shift 178
	.  error


state 171
	cmd : IF exp $$16 ':' listacmd else . ENDIF  (54)

	ENDIF  shift 179
	.  error


state 172
	while : WHILE exp $$18 cmd listacmdrep ENDWHILE .  (67)

	.  reduce 67


state 173
	listacmdrep : listacmdrep cmd .  (49)

	.  reduce 49


state 174
	for : FOR IDENT '=' exp $$19 ';' . exp $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 180
	metodo  goto 93


state 175
	retorno : RETORNO exp . $$15 ';'  (46)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$15 : .  (45)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 45

	$$15  goto 181


state 176
	bloco : '{' listacmd retorno '}' .  (44)

	.  reduce 44


state 177
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	lParametrosMetodo : ',' exp . lParametrosMetodo  (93)
	lParametrosMetodo : .  (94)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	','  shift 167
	')'  reduce 94

	lParametrosMetodo  goto 182


state 178
	else : '[' ELSE . ':' cmd listacmd ']'  (59)

	':'  shift 183
	.  error


state 179
	cmd : IF exp $$16 ':' listacmd else ENDIF .  (54)

	.  reduce 54


state 180
	for : FOR IDENT '=' exp $$19 ';' exp . $$20 ';' exp ':' cmd listacmdrep ENDFOR  (70)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)
	$$20 : .  (69)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	';'  reduce 69

	$$20  goto 184


state 181
	retorno : RETORNO exp $$15 . ';'  (46)

	';'  shift 185
	.  error


state 182
	lParametrosMetodo : ',' exp lParametrosMetodo .  (93)

	.  reduce 93


state 183
	else : '[' ELSE ':' . cmd listacmd ']'  (59)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 186
	while  goto 91
	for  goto 92
	metodo  goto 93


state 184
	for : FOR IDENT '=' exp $$19 ';' exp $$20 . ';' exp ':' cmd listacmdrep ENDFOR  (70)

	';'  shift 187
	.  error


state 185
	retorno : RETORNO exp $$15 ';' .  (46)

	.  reduce 46


state 186
	else : '[' ELSE ':' cmd . listacmd ']'  (59)
	listacmd : .  (48)

	.  reduce 48

	listacmd  goto 188


state 187
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' . exp ':' cmd listacmdrep ENDFOR  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	'('  shift 88
	.  error

	exp  goto 189
	metodo  goto 93


state 188
	listacmd : listacmd . cmd  (47)
	else : '[' ELSE ':' cmd listacmd . ']'  (59)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	']'  shift 190
	.  error

	exp  goto 89
	cmd  goto 90
	while  goto 91
	for  goto 92
	metodo  goto 93


state 189
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp . ':' cmd listacmdrep ENDFOR  (70)
	exp : exp . '+' exp  (71)
	exp : exp . '*' exp  (72)
	exp : exp . '-' exp  (73)
	exp : exp . '/' exp  (74)
	exp : exp . '>' exp  (75)
	exp : exp . '<' exp  (76)
	exp : exp . AND exp  (77)
	exp : exp . OR exp  (78)
	exp : exp . LESSEREQUAL exp  (79)
	exp : exp . GREATEREQUAL exp  (80)
	exp : exp . '=' exp  (88)

	AND  shift 108
	OR  shift 109
	GREATEREQUAL  shift 110
	LESSEREQUAL  shift 111
	'='  shift 112
	'>'  shift 113
	'<'  shift 114
	'+'  shift 115
	'-'  shift 116
	'/'  shift 117
	'*'  shift 118
	':'  shift 191
	.  error


state 190
	else : '[' ELSE ':' cmd listacmd ']' .  (59)

	.  reduce 59


state 191
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' . cmd listacmdrep ENDFOR  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 192
	while  goto 91
	for  goto 92
	metodo  goto 93


state 192
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' cmd . listacmdrep ENDFOR  (70)
	listacmdrep : .  (51)

	BREAK  shift 161
	IDENT  reduce 51
	NUM  reduce 51
	DOUBLE  reduce 51
	TRUE  reduce 51
	FALSE  reduce 51
	LITERAL  reduce 51
	IF  reduce 51
	WHILE  reduce 51
	FOR  reduce 51
	ENDFOR  reduce 51
	ESCREVA  reduce 51
	LEIA  reduce 51
	'('  reduce 51

	listacmdrep  goto 193


state 193
	listacmdrep : listacmdrep . cmd  (49)
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep . ENDFOR  (70)

	IDENT  shift 76
	NUM  shift 77
	DOUBLE  shift 78
	TRUE  shift 79
	FALSE  shift 80
	LITERAL  shift 81
	IF  shift 82
	WHILE  shift 83
	FOR  shift 84
	ENDFOR  shift 194
	ESCREVA  shift 85
	LEIA  shift 86
	'('  shift 88
	.  error

	exp  goto 89
	cmd  goto 173
	while  goto 91
	for  goto 92
	metodo  goto 93


state 194
	for : FOR IDENT '=' exp $$19 ';' exp $$20 ';' exp ':' cmd listacmdrep ENDFOR .  (70)

	.  reduce 70


50 terminals, 51 nonterminals
95 grammar rules, 195 states
