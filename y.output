   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 clas

   3  $$2 :

   4  clas : CLASSE IDENT $$2 '{' privados publicos '}'

   5  privados : PRIVATE dList

   6  publicos : PUBLIC mList

   7  $$3 :

   8  dList : type $$3 decl dList
   9        |

  10  decl : IDENT moreDecl ';'

  11  moreDecl : ',' IDENT moreDecl
  12           |

  13  type : INT
  14       | BOOL
  15       | DOUBLE
  16       | STRING
  17       | IDENT

  18  $$4 :

  19  mList : $$4 blocos main

  20  blocos : blocos bl
  21         |

  22  $$5 :

  23  $$6 :

  24  bl : INT IDENT $$5 '(' parametros ')' $$6 dList bloco

  25  $$7 :

  26  $$8 :

  27  bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList bloco

  28  $$9 :

  29  $$10 :

  30  bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList bloco

  31  $$11 :

  32  $$12 :

  33  bl : STRING IDENT $$11 '(' parametros ')' $$12 dList bloco

  34  $$13 :

  35  bl : IDENT $$13 '(' parametros ')' blocoConstrutor

  36  $$14 :

  37  parametros : $$14 type IDENT lParametros
  38             |

  39  $$15 :

  40  lParametros : $$15 ',' type IDENT lParametros
  41              |

  42  $$16 :

  43  main : VOID MAIN $$16 '(' ')' dList blocoConstrutor
  44       |

  45  blocoConstrutor : '{' listacmd '}'

  46  bloco : '{' listacmd retorno '}'

  47  $$17 :

  48  retorno : RETORNO exp $$17 ';'

  49  listacmd : listacmd cmd
  50           |

  51  listacmdrep : listacmdrep cmd
  52              | BREAK
  53              |

  54  cmd : exp ';'

  55  $$18 :

  56  cmd : IF exp $$18 ':' listacmd else ENDIF
  57      | while
  58      | for
  59      | ESCREVA escreva ';'
  60      | LEIA leia ';'

  61  else : '[' ELSE ':' cmd listacmd ']'
  62       |

  63  $$19 :

  64  escreva : exp $$19 parametroEscreva

  65  leia : exp

  66  parametroEscreva : ',' exp
  67                   |

  68  $$20 :

  69  while : WHILE exp $$20 cmd listacmdrep ENDWHILE

  70  $$21 :

  71  $$22 :

  72  for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR

  73  exp : exp '+' exp
  74      | exp '*' exp
  75      | exp '-' exp
  76      | exp '/' exp
  77      | exp '>' exp
  78      | exp '<' exp
  79      | exp AND exp
  80      | exp OR exp
  81      | exp LESSEREQUAL exp
  82      | exp GREATEREQUAL exp
  83      | TRUE
  84      | FALSE
  85      | NUM
  86      | DOUBLE
  87      | '(' exp ')'
  88      | LITERAL
  89      | IDENT
  90      | exp '=' exp
  91      | metodo

  92  $$23 :

  93  exp : NEW IDENT $$23 '(' parametrosMetodo ')'

  94  $$24 :

  95  metodo : IDENT '.' IDENT $$24 '(' parametrosMetodo ')'

  96  parametrosMetodo : exp lParametrosMetodo
  97                   |

  98  lParametrosMetodo : ',' exp lParametrosMetodo
  99                    |

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . clas  (2)

	CLASSE  shift 3
	.  error

	clas  goto 4


state 3
	clas : CLASSE . IDENT $$2 '{' privados publicos '}'  (4)

	IDENT  shift 5
	.  error


state 4
	prog : $$1 clas .  (2)

	.  reduce 2


state 5
	clas : CLASSE IDENT . $$2 '{' privados publicos '}'  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 6


state 6
	clas : CLASSE IDENT $$2 . '{' privados publicos '}'  (4)

	'{'  shift 7
	.  error


state 7
	clas : CLASSE IDENT $$2 '{' . privados publicos '}'  (4)

	PRIVATE  shift 8
	.  error

	privados  goto 9


state 8
	privados : PRIVATE . dList  (5)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9

	type  goto 15
	dList  goto 16


state 9
	clas : CLASSE IDENT $$2 '{' privados . publicos '}'  (4)

	PUBLIC  shift 17
	.  error

	publicos  goto 18


state 10
	type : IDENT .  (17)

	.  reduce 17


state 11
	type : INT .  (13)

	.  reduce 13


state 12
	type : BOOL .  (14)

	.  reduce 14


state 13
	type : STRING .  (16)

	.  reduce 16


state 14
	type : DOUBLE .  (15)

	.  reduce 15


state 15
	dList : type . $$3 decl dList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 19


state 16
	privados : PRIVATE dList .  (5)

	.  reduce 5


state 17
	publicos : PUBLIC . mList  (6)
	$$4 : .  (18)

	.  reduce 18

	mList  goto 20
	$$4  goto 21


state 18
	clas : CLASSE IDENT $$2 '{' privados publicos . '}'  (4)

	'}'  shift 22
	.  error


state 19
	dList : type $$3 . decl dList  (8)

	IDENT  shift 23
	.  error

	decl  goto 24


state 20
	publicos : PUBLIC mList .  (6)

	.  reduce 6


state 21
	mList : $$4 . blocos main  (19)
	blocos : .  (21)

	.  reduce 21

	blocos  goto 25


state 22
	clas : CLASSE IDENT $$2 '{' privados publicos '}' .  (4)

	.  reduce 4


state 23
	decl : IDENT . moreDecl ';'  (10)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 27


state 24
	dList : type $$3 decl . dList  (8)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9
	'{'  reduce 9

	type  goto 15
	dList  goto 28


state 25
	mList : $$4 blocos . main  (19)
	blocos : blocos . bl  (20)
	main : .  (44)

	IDENT  shift 29
	INT  shift 30
	BOOL  shift 31
	STRING  shift 32
	DOUBLE  shift 33
	VOID  shift 34
	'}'  reduce 44

	main  goto 35
	bl  goto 36


state 26
	moreDecl : ',' . IDENT moreDecl  (11)

	IDENT  shift 37
	.  error


state 27
	decl : IDENT moreDecl . ';'  (10)

	';'  shift 38
	.  error


state 28
	dList : type $$3 decl dList .  (8)

	.  reduce 8


state 29
	bl : IDENT . $$13 '(' parametros ')' blocoConstrutor  (35)
	$$13 : .  (34)

	.  reduce 34

	$$13  goto 39


state 30
	bl : INT . IDENT $$5 '(' parametros ')' $$6 dList bloco  (24)

	IDENT  shift 40
	.  error


state 31
	bl : BOOL . IDENT $$7 '(' parametros ')' $$8 dList bloco  (27)

	IDENT  shift 41
	.  error


state 32
	bl : STRING . IDENT $$11 '(' parametros ')' $$12 dList bloco  (33)

	IDENT  shift 42
	.  error


state 33
	bl : DOUBLE . IDENT $$9 '(' parametros ')' $$10 dList bloco  (30)

	IDENT  shift 43
	.  error


state 34
	main : VOID . MAIN $$16 '(' ')' dList blocoConstrutor  (43)

	MAIN  shift 44
	.  error


state 35
	mList : $$4 blocos main .  (19)

	.  reduce 19


state 36
	blocos : blocos bl .  (20)

	.  reduce 20


state 37
	moreDecl : ',' IDENT . moreDecl  (11)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 45


state 38
	decl : IDENT moreDecl ';' .  (10)

	.  reduce 10


state 39
	bl : IDENT $$13 . '(' parametros ')' blocoConstrutor  (35)

	'('  shift 46
	.  error


state 40
	bl : INT IDENT . $$5 '(' parametros ')' $$6 dList bloco  (24)
	$$5 : .  (22)

	.  reduce 22

	$$5  goto 47


state 41
	bl : BOOL IDENT . $$7 '(' parametros ')' $$8 dList bloco  (27)
	$$7 : .  (25)

	.  reduce 25

	$$7  goto 48


state 42
	bl : STRING IDENT . $$11 '(' parametros ')' $$12 dList bloco  (33)
	$$11 : .  (31)

	.  reduce 31

	$$11  goto 49


state 43
	bl : DOUBLE IDENT . $$9 '(' parametros ')' $$10 dList bloco  (30)
	$$9 : .  (28)

	.  reduce 28

	$$9  goto 50


state 44
	main : VOID MAIN . $$16 '(' ')' dList blocoConstrutor  (43)
	$$16 : .  (42)

	.  reduce 42

	$$16  goto 51


state 45
	moreDecl : ',' IDENT moreDecl .  (11)

	.  reduce 11


state 46
	bl : IDENT $$13 '(' . parametros ')' blocoConstrutor  (35)
	$$14 : .  (36)
	parametros : .  (38)

	IDENT  reduce 36
	INT  reduce 36
	BOOL  reduce 36
	STRING  reduce 36
	DOUBLE  reduce 36
	')'  reduce 38

	parametros  goto 52
	$$14  goto 53


state 47
	bl : INT IDENT $$5 . '(' parametros ')' $$6 dList bloco  (24)

	'('  shift 54
	.  error


state 48
	bl : BOOL IDENT $$7 . '(' parametros ')' $$8 dList bloco  (27)

	'('  shift 55
	.  error


state 49
	bl : STRING IDENT $$11 . '(' parametros ')' $$12 dList bloco  (33)

	'('  shift 56
	.  error


state 50
	bl : DOUBLE IDENT $$9 . '(' parametros ')' $$10 dList bloco  (30)

	'('  shift 57
	.  error


state 51
	main : VOID MAIN $$16 . '(' ')' dList blocoConstrutor  (43)

	'('  shift 58
	.  error


state 52
	bl : IDENT $$13 '(' parametros . ')' blocoConstrutor  (35)

	')'  shift 59
	.  error


state 53
	parametros : $$14 . type IDENT lParametros  (37)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 60


state 54
	bl : INT IDENT $$5 '(' . parametros ')' $$6 dList bloco  (24)
	$$14 : .  (36)
	parametros : .  (38)

	IDENT  reduce 36
	INT  reduce 36
	BOOL  reduce 36
	STRING  reduce 36
	DOUBLE  reduce 36
	')'  reduce 38

	parametros  goto 61
	$$14  goto 53


state 55
	bl : BOOL IDENT $$7 '(' . parametros ')' $$8 dList bloco  (27)
	$$14 : .  (36)
	parametros : .  (38)

	IDENT  reduce 36
	INT  reduce 36
	BOOL  reduce 36
	STRING  reduce 36
	DOUBLE  reduce 36
	')'  reduce 38

	parametros  goto 62
	$$14  goto 53


state 56
	bl : STRING IDENT $$11 '(' . parametros ')' $$12 dList bloco  (33)
	$$14 : .  (36)
	parametros : .  (38)

	IDENT  reduce 36
	INT  reduce 36
	BOOL  reduce 36
	STRING  reduce 36
	DOUBLE  reduce 36
	')'  reduce 38

	parametros  goto 63
	$$14  goto 53


state 57
	bl : DOUBLE IDENT $$9 '(' . parametros ')' $$10 dList bloco  (30)
	$$14 : .  (36)
	parametros : .  (38)

	IDENT  reduce 36
	INT  reduce 36
	BOOL  reduce 36
	STRING  reduce 36
	DOUBLE  reduce 36
	')'  reduce 38

	parametros  goto 64
	$$14  goto 53


state 58
	main : VOID MAIN $$16 '(' . ')' dList blocoConstrutor  (43)

	')'  shift 65
	.  error


state 59
	bl : IDENT $$13 '(' parametros ')' . blocoConstrutor  (35)

	'{'  shift 66
	.  error

	blocoConstrutor  goto 67


state 60
	parametros : $$14 type . IDENT lParametros  (37)

	IDENT  shift 68
	.  error


state 61
	bl : INT IDENT $$5 '(' parametros . ')' $$6 dList bloco  (24)

	')'  shift 69
	.  error


state 62
	bl : BOOL IDENT $$7 '(' parametros . ')' $$8 dList bloco  (27)

	')'  shift 70
	.  error


state 63
	bl : STRING IDENT $$11 '(' parametros . ')' $$12 dList bloco  (33)

	')'  shift 71
	.  error


state 64
	bl : DOUBLE IDENT $$9 '(' parametros . ')' $$10 dList bloco  (30)

	')'  shift 72
	.  error


state 65
	main : VOID MAIN $$16 '(' ')' . dList blocoConstrutor  (43)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 73


state 66
	blocoConstrutor : '{' . listacmd '}'  (45)
	listacmd : .  (50)

	.  reduce 50

	listacmd  goto 74


state 67
	bl : IDENT $$13 '(' parametros ')' blocoConstrutor .  (35)

	.  reduce 35


state 68
	parametros : $$14 type IDENT . lParametros  (37)
	$$15 : .  (39)
	lParametros : .  (41)

	','  reduce 39
	')'  reduce 41

	lParametros  goto 75
	$$15  goto 76


state 69
	bl : INT IDENT $$5 '(' parametros ')' . $$6 dList bloco  (24)
	$$6 : .  (23)

	.  reduce 23

	$$6  goto 77


state 70
	bl : BOOL IDENT $$7 '(' parametros ')' . $$8 dList bloco  (27)
	$$8 : .  (26)

	.  reduce 26

	$$8  goto 78


state 71
	bl : STRING IDENT $$11 '(' parametros ')' . $$12 dList bloco  (33)
	$$12 : .  (32)

	.  reduce 32

	$$12  goto 79


state 72
	bl : DOUBLE IDENT $$9 '(' parametros ')' . $$10 dList bloco  (30)
	$$10 : .  (29)

	.  reduce 29

	$$10  goto 80


state 73
	main : VOID MAIN $$16 '(' ')' dList . blocoConstrutor  (43)

	'{'  shift 66
	.  error

	blocoConstrutor  goto 81


state 74
	blocoConstrutor : '{' listacmd . '}'  (45)
	listacmd : listacmd . cmd  (49)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'}'  shift 94
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 98
	while  goto 99
	for  goto 100


state 75
	parametros : $$14 type IDENT lParametros .  (37)

	.  reduce 37


state 76
	lParametros : $$15 . ',' type IDENT lParametros  (40)

	','  shift 101
	.  error


state 77
	bl : INT IDENT $$5 '(' parametros ')' $$6 . dList bloco  (24)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 102


state 78
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 . dList bloco  (27)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 103


state 79
	bl : STRING IDENT $$11 '(' parametros ')' $$12 . dList bloco  (33)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 104


state 80
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 . dList bloco  (30)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 105


state 81
	main : VOID MAIN $$16 '(' ')' dList blocoConstrutor .  (43)

	.  reduce 43


state 82
	exp : IDENT .  (89)
	metodo : IDENT . '.' IDENT $$24 '(' parametrosMetodo ')'  (95)

	'.'  shift 106
	IDENT  reduce 89
	NUM  reduce 89
	DOUBLE  reduce 89
	NEW  reduce 89
	TRUE  reduce 89
	FALSE  reduce 89
	LITERAL  reduce 89
	AND  reduce 89
	IF  reduce 89
	WHILE  reduce 89
	FOR  reduce 89
	ESCREVA  reduce 89
	LEIA  reduce 89
	OR  reduce 89
	GREATEREQUAL  reduce 89
	LESSEREQUAL  reduce 89
	'='  reduce 89
	'>'  reduce 89
	'<'  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	'/'  reduce 89
	'*'  reduce 89
	';'  reduce 89
	','  reduce 89
	'('  reduce 89
	')'  reduce 89
	':'  reduce 89


state 83
	exp : NUM .  (85)

	.  reduce 85


state 84
	exp : DOUBLE .  (86)

	.  reduce 86


state 85
	exp : NEW . IDENT $$23 '(' parametrosMetodo ')'  (93)

	IDENT  shift 107
	.  error


state 86
	exp : TRUE .  (83)

	.  reduce 83


state 87
	exp : FALSE .  (84)

	.  reduce 84


state 88
	exp : LITERAL .  (88)

	.  reduce 88


state 89
	cmd : IF . exp $$18 ':' listacmd else ENDIF  (56)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 108
	metodo  goto 97


state 90
	while : WHILE . exp $$20 cmd listacmdrep ENDWHILE  (69)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 109
	metodo  goto 97


state 91
	for : FOR . IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)

	IDENT  shift 110
	.  error


state 92
	cmd : ESCREVA . escreva ';'  (59)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 111
	metodo  goto 97
	escreva  goto 112


state 93
	cmd : LEIA . leia ';'  (60)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 113
	metodo  goto 97
	leia  goto 114


state 94
	blocoConstrutor : '{' listacmd '}' .  (45)

	.  reduce 45


state 95
	exp : '(' . exp ')'  (87)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 115
	metodo  goto 97


state 96
	cmd : exp . ';'  (54)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  shift 127
	.  error


state 97
	exp : metodo .  (91)

	.  reduce 91


state 98
	listacmd : listacmd cmd .  (49)

	.  reduce 49


state 99
	cmd : while .  (57)

	.  reduce 57


state 100
	cmd : for .  (58)

	.  reduce 58


state 101
	lParametros : $$15 ',' . type IDENT lParametros  (40)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 128


state 102
	bl : INT IDENT $$5 '(' parametros ')' $$6 dList . bloco  (24)

	'{'  shift 129
	.  error

	bloco  goto 130


state 103
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList . bloco  (27)

	'{'  shift 129
	.  error

	bloco  goto 131


state 104
	bl : STRING IDENT $$11 '(' parametros ')' $$12 dList . bloco  (33)

	'{'  shift 129
	.  error

	bloco  goto 132


state 105
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList . bloco  (30)

	'{'  shift 129
	.  error

	bloco  goto 133


state 106
	metodo : IDENT '.' . IDENT $$24 '(' parametrosMetodo ')'  (95)

	IDENT  shift 134
	.  error


state 107
	exp : NEW IDENT . $$23 '(' parametrosMetodo ')'  (93)
	$$23 : .  (92)

	.  reduce 92

	$$23  goto 135


state 108
	cmd : IF exp . $$18 ':' listacmd else ENDIF  (56)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$18 : .  (55)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	':'  reduce 55

	$$18  goto 136


state 109
	while : WHILE exp . $$20 cmd listacmdrep ENDWHILE  (69)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$20 : .  (68)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 68
	NUM  reduce 68
	DOUBLE  reduce 68
	NEW  reduce 68
	TRUE  reduce 68
	FALSE  reduce 68
	LITERAL  reduce 68
	IF  reduce 68
	WHILE  reduce 68
	FOR  reduce 68
	ESCREVA  reduce 68
	LEIA  reduce 68
	'('  reduce 68

	$$20  goto 137


state 110
	for : FOR IDENT . '=' exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)

	'='  shift 138
	.  error


state 111
	escreva : exp . $$19 parametroEscreva  (64)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$19 : .  (63)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 63
	','  reduce 63

	$$19  goto 139


state 112
	cmd : ESCREVA escreva . ';'  (59)

	';'  shift 140
	.  error


state 113
	leia : exp .  (65)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 65


state 114
	cmd : LEIA leia . ';'  (60)

	';'  shift 141
	.  error


state 115
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : '(' exp . ')'  (87)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	')'  shift 142
	.  error


state 116
	exp : exp AND . exp  (79)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 143
	metodo  goto 97


state 117
	exp : exp OR . exp  (80)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 144
	metodo  goto 97


state 118
	exp : exp GREATEREQUAL . exp  (82)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 145
	metodo  goto 97


state 119
	exp : exp LESSEREQUAL . exp  (81)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 146
	metodo  goto 97


state 120
	exp : exp '=' . exp  (90)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 147
	metodo  goto 97


state 121
	exp : exp '>' . exp  (77)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 148
	metodo  goto 97


state 122
	exp : exp '<' . exp  (78)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 149
	metodo  goto 97


state 123
	exp : exp '+' . exp  (73)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 150
	metodo  goto 97


state 124
	exp : exp '-' . exp  (75)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 151
	metodo  goto 97


state 125
	exp : exp '/' . exp  (76)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 152
	metodo  goto 97


state 126
	exp : exp '*' . exp  (74)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 153
	metodo  goto 97


state 127
	cmd : exp ';' .  (54)

	.  reduce 54


state 128
	lParametros : $$15 ',' type . IDENT lParametros  (40)

	IDENT  shift 154
	.  error


state 129
	bloco : '{' . listacmd retorno '}'  (46)
	listacmd : .  (50)

	.  reduce 50

	listacmd  goto 155


state 130
	bl : INT IDENT $$5 '(' parametros ')' $$6 dList bloco .  (24)

	.  reduce 24


state 131
	bl : BOOL IDENT $$7 '(' parametros ')' $$8 dList bloco .  (27)

	.  reduce 27


state 132
	bl : STRING IDENT $$11 '(' parametros ')' $$12 dList bloco .  (33)

	.  reduce 33


state 133
	bl : DOUBLE IDENT $$9 '(' parametros ')' $$10 dList bloco .  (30)

	.  reduce 30


state 134
	metodo : IDENT '.' IDENT . $$24 '(' parametrosMetodo ')'  (95)
	$$24 : .  (94)

	.  reduce 94

	$$24  goto 156


state 135
	exp : NEW IDENT $$23 . '(' parametrosMetodo ')'  (93)

	'('  shift 157
	.  error


state 136
	cmd : IF exp $$18 . ':' listacmd else ENDIF  (56)

	':'  shift 158
	.  error


state 137
	while : WHILE exp $$20 . cmd listacmdrep ENDWHILE  (69)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 159
	while  goto 99
	for  goto 100


state 138
	for : FOR IDENT '=' . exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 160
	metodo  goto 97


state 139
	escreva : exp $$19 . parametroEscreva  (64)
	parametroEscreva : .  (67)

	','  shift 161
	';'  reduce 67

	parametroEscreva  goto 162


state 140
	cmd : ESCREVA escreva ';' .  (59)

	.  reduce 59


state 141
	cmd : LEIA leia ';' .  (60)

	.  reduce 60


state 142
	exp : '(' exp ')' .  (87)

	.  reduce 87


state 143
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp AND exp .  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	.  reduce 79


state 144
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp OR exp .  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	.  reduce 80


state 145
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp GREATEREQUAL exp .  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 82
	NUM  reduce 82
	DOUBLE  reduce 82
	NEW  reduce 82
	TRUE  reduce 82
	FALSE  reduce 82
	LITERAL  reduce 82
	IF  reduce 82
	WHILE  reduce 82
	FOR  reduce 82
	ESCREVA  reduce 82
	LEIA  reduce 82
	'='  reduce 82
	';'  reduce 82
	','  reduce 82
	'('  reduce 82
	')'  reduce 82
	':'  reduce 82


state 146
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp LESSEREQUAL exp .  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 81
	NUM  reduce 81
	DOUBLE  reduce 81
	NEW  reduce 81
	TRUE  reduce 81
	FALSE  reduce 81
	LITERAL  reduce 81
	IF  reduce 81
	WHILE  reduce 81
	FOR  reduce 81
	ESCREVA  reduce 81
	LEIA  reduce 81
	'='  reduce 81
	';'  reduce 81
	','  reduce 81
	'('  reduce 81
	')'  reduce 81
	':'  reduce 81


state 147
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	exp : exp '=' exp .  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 90
	NUM  reduce 90
	DOUBLE  reduce 90
	NEW  reduce 90
	TRUE  reduce 90
	FALSE  reduce 90
	LITERAL  reduce 90
	IF  reduce 90
	WHILE  reduce 90
	FOR  reduce 90
	ESCREVA  reduce 90
	LEIA  reduce 90
	';'  reduce 90
	','  reduce 90
	'('  reduce 90
	')'  reduce 90
	':'  reduce 90


state 148
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp '>' exp .  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 77
	NUM  reduce 77
	DOUBLE  reduce 77
	NEW  reduce 77
	TRUE  reduce 77
	FALSE  reduce 77
	LITERAL  reduce 77
	IF  reduce 77
	WHILE  reduce 77
	FOR  reduce 77
	ESCREVA  reduce 77
	LEIA  reduce 77
	'='  reduce 77
	';'  reduce 77
	','  reduce 77
	'('  reduce 77
	')'  reduce 77
	':'  reduce 77


state 149
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp '<' exp .  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 78
	NUM  reduce 78
	DOUBLE  reduce 78
	NEW  reduce 78
	TRUE  reduce 78
	FALSE  reduce 78
	LITERAL  reduce 78
	IF  reduce 78
	WHILE  reduce 78
	FOR  reduce 78
	ESCREVA  reduce 78
	LEIA  reduce 78
	'='  reduce 78
	';'  reduce 78
	','  reduce 78
	'('  reduce 78
	')'  reduce 78
	':'  reduce 78


state 150
	exp : exp . '+' exp  (73)
	exp : exp '+' exp .  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 73
	NUM  reduce 73
	DOUBLE  reduce 73
	NEW  reduce 73
	TRUE  reduce 73
	FALSE  reduce 73
	LITERAL  reduce 73
	IF  reduce 73
	WHILE  reduce 73
	FOR  reduce 73
	ESCREVA  reduce 73
	LEIA  reduce 73
	GREATEREQUAL  reduce 73
	LESSEREQUAL  reduce 73
	'='  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	';'  reduce 73
	','  reduce 73
	'('  reduce 73
	')'  reduce 73
	':'  reduce 73


state 151
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp '-' exp .  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	'/'  shift 125
	'*'  shift 126
	IDENT  reduce 75
	NUM  reduce 75
	DOUBLE  reduce 75
	NEW  reduce 75
	TRUE  reduce 75
	FALSE  reduce 75
	LITERAL  reduce 75
	IF  reduce 75
	WHILE  reduce 75
	FOR  reduce 75
	ESCREVA  reduce 75
	LEIA  reduce 75
	GREATEREQUAL  reduce 75
	LESSEREQUAL  reduce 75
	'='  reduce 75
	'>'  reduce 75
	'<'  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	';'  reduce 75
	','  reduce 75
	'('  reduce 75
	')'  reduce 75
	':'  reduce 75


state 152
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp '/' exp .  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	IDENT  reduce 76
	NUM  reduce 76
	DOUBLE  reduce 76
	NEW  reduce 76
	TRUE  reduce 76
	FALSE  reduce 76
	LITERAL  reduce 76
	IF  reduce 76
	WHILE  reduce 76
	FOR  reduce 76
	ESCREVA  reduce 76
	LEIA  reduce 76
	GREATEREQUAL  reduce 76
	LESSEREQUAL  reduce 76
	'='  reduce 76
	'>'  reduce 76
	'<'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'/'  reduce 76
	'*'  reduce 76
	';'  reduce 76
	','  reduce 76
	'('  reduce 76
	')'  reduce 76
	':'  reduce 76


state 153
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp '*' exp .  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	IDENT  reduce 74
	NUM  reduce 74
	DOUBLE  reduce 74
	NEW  reduce 74
	TRUE  reduce 74
	FALSE  reduce 74
	LITERAL  reduce 74
	IF  reduce 74
	WHILE  reduce 74
	FOR  reduce 74
	ESCREVA  reduce 74
	LEIA  reduce 74
	GREATEREQUAL  reduce 74
	LESSEREQUAL  reduce 74
	'='  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'/'  reduce 74
	'*'  reduce 74
	';'  reduce 74
	','  reduce 74
	'('  reduce 74
	')'  reduce 74
	':'  reduce 74


state 154
	lParametros : $$15 ',' type IDENT . lParametros  (40)
	$$15 : .  (39)
	lParametros : .  (41)

	','  reduce 39
	')'  reduce 41

	lParametros  goto 163
	$$15  goto 76


state 155
	bloco : '{' listacmd . retorno '}'  (46)
	listacmd : listacmd . cmd  (49)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	RETORNO  shift 164
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	retorno  goto 165
	cmd  goto 98
	while  goto 99
	for  goto 100


state 156
	metodo : IDENT '.' IDENT $$24 . '(' parametrosMetodo ')'  (95)

	'('  shift 166
	.  error


state 157
	exp : NEW IDENT $$23 '(' . parametrosMetodo ')'  (93)
	parametrosMetodo : .  (97)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	')'  reduce 97

	exp  goto 167
	metodo  goto 97
	parametrosMetodo  goto 168


state 158
	cmd : IF exp $$18 ':' . listacmd else ENDIF  (56)
	listacmd : .  (50)

	.  reduce 50

	listacmd  goto 169


state 159
	while : WHILE exp $$20 cmd . listacmdrep ENDWHILE  (69)
	listacmdrep : .  (53)

	BREAK  shift 170
	IDENT  reduce 53
	NUM  reduce 53
	DOUBLE  reduce 53
	NEW  reduce 53
	TRUE  reduce 53
	FALSE  reduce 53
	LITERAL  reduce 53
	IF  reduce 53
	WHILE  reduce 53
	ENDWHILE  reduce 53
	FOR  reduce 53
	ESCREVA  reduce 53
	LEIA  reduce 53
	'('  reduce 53

	listacmdrep  goto 171


state 160
	for : FOR IDENT '=' exp . $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$21 : .  (70)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 70

	$$21  goto 172


state 161
	parametroEscreva : ',' . exp  (66)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 173
	metodo  goto 97


state 162
	escreva : exp $$19 parametroEscreva .  (64)

	.  reduce 64


state 163
	lParametros : $$15 ',' type IDENT lParametros .  (40)

	.  reduce 40


state 164
	retorno : RETORNO . exp $$17 ';'  (48)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 174
	metodo  goto 97


state 165
	bloco : '{' listacmd retorno . '}'  (46)

	'}'  shift 175
	.  error


state 166
	metodo : IDENT '.' IDENT $$24 '(' . parametrosMetodo ')'  (95)
	parametrosMetodo : .  (97)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	')'  reduce 97

	exp  goto 167
	metodo  goto 97
	parametrosMetodo  goto 176


state 167
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	parametrosMetodo : exp . lParametrosMetodo  (96)
	lParametrosMetodo : .  (99)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	','  shift 177
	')'  reduce 99

	lParametrosMetodo  goto 178


state 168
	exp : NEW IDENT $$23 '(' parametrosMetodo . ')'  (93)

	')'  shift 179
	.  error


state 169
	listacmd : listacmd . cmd  (49)
	cmd : IF exp $$18 ':' listacmd . else ENDIF  (56)
	else : .  (62)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'['  shift 180
	'('  shift 95
	ENDIF  reduce 62

	exp  goto 96
	metodo  goto 97
	cmd  goto 98
	else  goto 181
	while  goto 99
	for  goto 100


state 170
	listacmdrep : BREAK .  (52)

	.  reduce 52


state 171
	listacmdrep : listacmdrep . cmd  (51)
	while : WHILE exp $$20 cmd listacmdrep . ENDWHILE  (69)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	ENDWHILE  shift 182
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 183
	while  goto 99
	for  goto 100


state 172
	for : FOR IDENT '=' exp $$21 . ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)

	';'  shift 184
	.  error


state 173
	parametroEscreva : ',' exp .  (66)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 66


state 174
	retorno : RETORNO exp . $$17 ';'  (48)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$17 : .  (47)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 47

	$$17  goto 185


state 175
	bloco : '{' listacmd retorno '}' .  (46)

	.  reduce 46


state 176
	metodo : IDENT '.' IDENT $$24 '(' parametrosMetodo . ')'  (95)

	')'  shift 186
	.  error


state 177
	lParametrosMetodo : ',' . exp lParametrosMetodo  (98)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 187
	metodo  goto 97


state 178
	parametrosMetodo : exp lParametrosMetodo .  (96)

	.  reduce 96


state 179
	exp : NEW IDENT $$23 '(' parametrosMetodo ')' .  (93)

	.  reduce 93


state 180
	else : '[' . ELSE ':' cmd listacmd ']'  (61)

	ELSE  shift 188
	.  error


state 181
	cmd : IF exp $$18 ':' listacmd else . ENDIF  (56)

	ENDIF  shift 189
	.  error


state 182
	while : WHILE exp $$20 cmd listacmdrep ENDWHILE .  (69)

	.  reduce 69


state 183
	listacmdrep : listacmdrep cmd .  (51)

	.  reduce 51


state 184
	for : FOR IDENT '=' exp $$21 ';' . exp $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 190
	metodo  goto 97


state 185
	retorno : RETORNO exp $$17 . ';'  (48)

	';'  shift 191
	.  error


state 186
	metodo : IDENT '.' IDENT $$24 '(' parametrosMetodo ')' .  (95)

	.  reduce 95


state 187
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	lParametrosMetodo : ',' exp . lParametrosMetodo  (98)
	lParametrosMetodo : .  (99)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	','  shift 177
	')'  reduce 99

	lParametrosMetodo  goto 192


state 188
	else : '[' ELSE . ':' cmd listacmd ']'  (61)

	':'  shift 193
	.  error


state 189
	cmd : IF exp $$18 ':' listacmd else ENDIF .  (56)

	.  reduce 56


state 190
	for : FOR IDENT '=' exp $$21 ';' exp . $$22 ';' exp ':' cmd listacmdrep ENDFOR  (72)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)
	$$22 : .  (71)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	';'  reduce 71

	$$22  goto 194


state 191
	retorno : RETORNO exp $$17 ';' .  (48)

	.  reduce 48


state 192
	lParametrosMetodo : ',' exp lParametrosMetodo .  (98)

	.  reduce 98


state 193
	else : '[' ELSE ':' . cmd listacmd ']'  (61)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 195
	while  goto 99
	for  goto 100


state 194
	for : FOR IDENT '=' exp $$21 ';' exp $$22 . ';' exp ':' cmd listacmdrep ENDFOR  (72)

	';'  shift 196
	.  error


state 195
	else : '[' ELSE ':' cmd . listacmd ']'  (61)
	listacmd : .  (50)

	.  reduce 50

	listacmd  goto 197


state 196
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' . exp ':' cmd listacmdrep ENDFOR  (72)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	'('  shift 95
	.  error

	exp  goto 198
	metodo  goto 97


state 197
	listacmd : listacmd . cmd  (49)
	else : '[' ELSE ':' cmd listacmd . ']'  (61)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	']'  shift 199
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 98
	while  goto 99
	for  goto 100


state 198
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp . ':' cmd listacmdrep ENDFOR  (72)
	exp : exp . '+' exp  (73)
	exp : exp . '*' exp  (74)
	exp : exp . '-' exp  (75)
	exp : exp . '/' exp  (76)
	exp : exp . '>' exp  (77)
	exp : exp . '<' exp  (78)
	exp : exp . AND exp  (79)
	exp : exp . OR exp  (80)
	exp : exp . LESSEREQUAL exp  (81)
	exp : exp . GREATEREQUAL exp  (82)
	exp : exp . '=' exp  (90)

	AND  shift 116
	OR  shift 117
	GREATEREQUAL  shift 118
	LESSEREQUAL  shift 119
	'='  shift 120
	'>'  shift 121
	'<'  shift 122
	'+'  shift 123
	'-'  shift 124
	'/'  shift 125
	'*'  shift 126
	':'  shift 200
	.  error


state 199
	else : '[' ELSE ':' cmd listacmd ']' .  (61)

	.  reduce 61


state 200
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' . cmd listacmdrep ENDFOR  (72)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 201
	while  goto 99
	for  goto 100


state 201
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' cmd . listacmdrep ENDFOR  (72)
	listacmdrep : .  (53)

	BREAK  shift 170
	IDENT  reduce 53
	NUM  reduce 53
	DOUBLE  reduce 53
	NEW  reduce 53
	TRUE  reduce 53
	FALSE  reduce 53
	LITERAL  reduce 53
	IF  reduce 53
	WHILE  reduce 53
	FOR  reduce 53
	ENDFOR  reduce 53
	ESCREVA  reduce 53
	LEIA  reduce 53
	'('  reduce 53

	listacmdrep  goto 202


state 202
	listacmdrep : listacmdrep . cmd  (51)
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep . ENDFOR  (72)

	IDENT  shift 82
	NUM  shift 83
	DOUBLE  shift 84
	NEW  shift 85
	TRUE  shift 86
	FALSE  shift 87
	LITERAL  shift 88
	IF  shift 89
	WHILE  shift 90
	FOR  shift 91
	ENDFOR  shift 203
	ESCREVA  shift 92
	LEIA  shift 93
	'('  shift 95
	.  error

	exp  goto 96
	metodo  goto 97
	cmd  goto 183
	while  goto 99
	for  goto 100


state 203
	for : FOR IDENT '=' exp $$21 ';' exp $$22 ';' exp ':' cmd listacmdrep ENDFOR .  (72)

	.  reduce 72


50 terminals, 55 nonterminals
100 grammar rules, 204 states
