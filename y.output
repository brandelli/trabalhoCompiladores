   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 clas

   3  $$2 :

   4  clas : CLASSE IDENT $$2 '{' privados publicos '}'

   5  privados : PRIVATE dList

   6  publicos : PUBLIC mList

   7  $$3 :

   8  dList : type $$3 decl dList
   9        |

  10  decl : IDENT moreDecl ';'

  11  moreDecl : ',' IDENT moreDecl
  12           |

  13  type : INT
  14       | BOOL
  15       | DOUBLE
  16       | STRING
  17       | IDENT

  18  $$4 :

  19  mList : $$4 blocos main

  20  blocos : blocos bl
  21         |

  22  bl : INT IDENT '(' parametros ')' dList bloco
  23     | BOOL IDENT '(' parametros ')' dList bloco
  24     | DOUBLE IDENT '(' parametros ')' dList bloco
  25     | STRING IDENT '(' parametros ')' dList bloco
  26     | IDENT '(' parametros ')' dList blocoConstrutor

  27  parametros : type IDENT lParametros
  28             |

  29  lParametros : ',' type IDENT lParametros
  30              |

  31  main : VOID MAIN '(' ')' dList blocoConstrutor
  32       |

  33  blocoConstrutor : '{' listacmd '}'

  34  bloco : '{' listacmd retorno '}'

  35  retorno : RETORNO exp ';'

  36  listacmd : listacmd cmd
  37           |

  38  listacmdrep : listacmdrep cmd
  39              | BREAK
  40              |

  41  cmd : exp ';'

  42  $$5 :

  43  cmd : IF exp $$5 ':' listacmd else ENDIF
  44      | while
  45      | for
  46      | ESCREVA escreva ';'
  47      | LEIA leia ';'

  48  else : '[' ELSE ':' cmd listacmd ']'
  49       |

  50  escreva : exp parametroEscreva

  51  leia : exp

  52  parametroEscreva : ',' exp
  53                   |

  54  $$6 :

  55  while : WHILE exp $$6 cmd listacmdrep ENDWHILE

  56  for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR

  57  atribuicaoFor : type IDENT '=' IDENT
  58                | type IDENT '=' NUM
  59                | type IDENT '=' DOUBLE

  60  exp : exp '+' exp
  61      | exp '*' exp
  62      | exp '-' exp
  63      | exp '/' exp
  64      | exp '>' exp
  65      | exp '<' exp
  66      | exp AND exp
  67      | exp OR exp
  68      | exp LESSEREQUAL exp
  69      | exp GREATEREQUAL exp
  70      | TRUE
  71      | FALSE
  72      | NUM
  73      | DOUBLE
  74      | '(' exp ')'
  75      | LITERAL
  76      | IDENT
  77      | IDENT '[' exp ']'
  78      | exp '=' exp
  79      | metodo

  80  metodo : IDENT '.' IDENT '(' parametrosMetodo ')'

  81  parametrosMetodo : exp lParametrosMetodo
  82                   |

  83  lParametrosMetodo : ',' exp lParametrosMetodo
  84                    |

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . clas  (2)

	CLASSE  shift 3
	.  error

	clas  goto 4


state 3
	clas : CLASSE . IDENT $$2 '{' privados publicos '}'  (4)

	IDENT  shift 5
	.  error


state 4
	prog : $$1 clas .  (2)

	.  reduce 2


state 5
	clas : CLASSE IDENT . $$2 '{' privados publicos '}'  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 6


state 6
	clas : CLASSE IDENT $$2 . '{' privados publicos '}'  (4)

	'{'  shift 7
	.  error


state 7
	clas : CLASSE IDENT $$2 '{' . privados publicos '}'  (4)

	PRIVATE  shift 8
	.  error

	privados  goto 9


state 8
	privados : PRIVATE . dList  (5)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9

	type  goto 15
	dList  goto 16


state 9
	clas : CLASSE IDENT $$2 '{' privados . publicos '}'  (4)

	PUBLIC  shift 17
	.  error

	publicos  goto 18


state 10
	type : IDENT .  (17)

	.  reduce 17


state 11
	type : INT .  (13)

	.  reduce 13


state 12
	type : BOOL .  (14)

	.  reduce 14


state 13
	type : STRING .  (16)

	.  reduce 16


state 14
	type : DOUBLE .  (15)

	.  reduce 15


state 15
	dList : type . $$3 decl dList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 19


state 16
	privados : PRIVATE dList .  (5)

	.  reduce 5


state 17
	publicos : PUBLIC . mList  (6)
	$$4 : .  (18)

	.  reduce 18

	mList  goto 20
	$$4  goto 21


state 18
	clas : CLASSE IDENT $$2 '{' privados publicos . '}'  (4)

	'}'  shift 22
	.  error


state 19
	dList : type $$3 . decl dList  (8)

	IDENT  shift 23
	.  error

	decl  goto 24


state 20
	publicos : PUBLIC mList .  (6)

	.  reduce 6


state 21
	mList : $$4 . blocos main  (19)
	blocos : .  (21)

	.  reduce 21

	blocos  goto 25


state 22
	clas : CLASSE IDENT $$2 '{' privados publicos '}' .  (4)

	.  reduce 4


state 23
	decl : IDENT . moreDecl ';'  (10)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 27


state 24
	dList : type $$3 decl . dList  (8)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	PUBLIC  reduce 9
	'{'  reduce 9

	type  goto 15
	dList  goto 28


state 25
	mList : $$4 blocos . main  (19)
	blocos : blocos . bl  (20)
	main : .  (32)

	IDENT  shift 29
	INT  shift 30
	BOOL  shift 31
	STRING  shift 32
	DOUBLE  shift 33
	VOID  shift 34
	'}'  reduce 32

	main  goto 35
	bl  goto 36


state 26
	moreDecl : ',' . IDENT moreDecl  (11)

	IDENT  shift 37
	.  error


state 27
	decl : IDENT moreDecl . ';'  (10)

	';'  shift 38
	.  error


state 28
	dList : type $$3 decl dList .  (8)

	.  reduce 8


state 29
	bl : IDENT . '(' parametros ')' dList blocoConstrutor  (26)

	'('  shift 39
	.  error


state 30
	bl : INT . IDENT '(' parametros ')' dList bloco  (22)

	IDENT  shift 40
	.  error


state 31
	bl : BOOL . IDENT '(' parametros ')' dList bloco  (23)

	IDENT  shift 41
	.  error


state 32
	bl : STRING . IDENT '(' parametros ')' dList bloco  (25)

	IDENT  shift 42
	.  error


state 33
	bl : DOUBLE . IDENT '(' parametros ')' dList bloco  (24)

	IDENT  shift 43
	.  error


state 34
	main : VOID . MAIN '(' ')' dList blocoConstrutor  (31)

	MAIN  shift 44
	.  error


state 35
	mList : $$4 blocos main .  (19)

	.  reduce 19


state 36
	blocos : blocos bl .  (20)

	.  reduce 20


state 37
	moreDecl : ',' IDENT . moreDecl  (11)
	moreDecl : .  (12)

	','  shift 26
	';'  reduce 12

	moreDecl  goto 45


state 38
	decl : IDENT moreDecl ';' .  (10)

	.  reduce 10


state 39
	bl : IDENT '(' . parametros ')' dList blocoConstrutor  (26)
	parametros : .  (28)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 28

	type  goto 46
	parametros  goto 47


state 40
	bl : INT IDENT . '(' parametros ')' dList bloco  (22)

	'('  shift 48
	.  error


state 41
	bl : BOOL IDENT . '(' parametros ')' dList bloco  (23)

	'('  shift 49
	.  error


state 42
	bl : STRING IDENT . '(' parametros ')' dList bloco  (25)

	'('  shift 50
	.  error


state 43
	bl : DOUBLE IDENT . '(' parametros ')' dList bloco  (24)

	'('  shift 51
	.  error


state 44
	main : VOID MAIN . '(' ')' dList blocoConstrutor  (31)

	'('  shift 52
	.  error


state 45
	moreDecl : ',' IDENT moreDecl .  (11)

	.  reduce 11


state 46
	parametros : type . IDENT lParametros  (27)

	IDENT  shift 53
	.  error


state 47
	bl : IDENT '(' parametros . ')' dList blocoConstrutor  (26)

	')'  shift 54
	.  error


state 48
	bl : INT IDENT '(' . parametros ')' dList bloco  (22)
	parametros : .  (28)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 28

	type  goto 46
	parametros  goto 55


state 49
	bl : BOOL IDENT '(' . parametros ')' dList bloco  (23)
	parametros : .  (28)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 28

	type  goto 46
	parametros  goto 56


state 50
	bl : STRING IDENT '(' . parametros ')' dList bloco  (25)
	parametros : .  (28)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 28

	type  goto 46
	parametros  goto 57


state 51
	bl : DOUBLE IDENT '(' . parametros ')' dList bloco  (24)
	parametros : .  (28)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	')'  reduce 28

	type  goto 46
	parametros  goto 58


state 52
	main : VOID MAIN '(' . ')' dList blocoConstrutor  (31)

	')'  shift 59
	.  error


state 53
	parametros : type IDENT . lParametros  (27)
	lParametros : .  (30)

	','  shift 60
	')'  reduce 30

	lParametros  goto 61


state 54
	bl : IDENT '(' parametros ')' . dList blocoConstrutor  (26)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 62


state 55
	bl : INT IDENT '(' parametros . ')' dList bloco  (22)

	')'  shift 63
	.  error


state 56
	bl : BOOL IDENT '(' parametros . ')' dList bloco  (23)

	')'  shift 64
	.  error


state 57
	bl : STRING IDENT '(' parametros . ')' dList bloco  (25)

	')'  shift 65
	.  error


state 58
	bl : DOUBLE IDENT '(' parametros . ')' dList bloco  (24)

	')'  shift 66
	.  error


state 59
	main : VOID MAIN '(' ')' . dList blocoConstrutor  (31)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 67


state 60
	lParametros : ',' . type IDENT lParametros  (29)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 68


state 61
	parametros : type IDENT lParametros .  (27)

	.  reduce 27


state 62
	bl : IDENT '(' parametros ')' dList . blocoConstrutor  (26)

	'{'  shift 69
	.  error

	blocoConstrutor  goto 70


state 63
	bl : INT IDENT '(' parametros ')' . dList bloco  (22)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 71


state 64
	bl : BOOL IDENT '(' parametros ')' . dList bloco  (23)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 72


state 65
	bl : STRING IDENT '(' parametros ')' . dList bloco  (25)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 73


state 66
	bl : DOUBLE IDENT '(' parametros ')' . dList bloco  (24)
	dList : .  (9)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	'{'  reduce 9

	type  goto 15
	dList  goto 74


state 67
	main : VOID MAIN '(' ')' dList . blocoConstrutor  (31)

	'{'  shift 69
	.  error

	blocoConstrutor  goto 75


state 68
	lParametros : ',' type . IDENT lParametros  (29)

	IDENT  shift 76
	.  error


state 69
	blocoConstrutor : '{' . listacmd '}'  (33)
	listacmd : .  (37)

	.  reduce 37

	listacmd  goto 77


state 70
	bl : IDENT '(' parametros ')' dList blocoConstrutor .  (26)

	.  reduce 26


state 71
	bl : INT IDENT '(' parametros ')' dList . bloco  (22)

	'{'  shift 78
	.  error

	bloco  goto 79


state 72
	bl : BOOL IDENT '(' parametros ')' dList . bloco  (23)

	'{'  shift 78
	.  error

	bloco  goto 80


state 73
	bl : STRING IDENT '(' parametros ')' dList . bloco  (25)

	'{'  shift 78
	.  error

	bloco  goto 81


state 74
	bl : DOUBLE IDENT '(' parametros ')' dList . bloco  (24)

	'{'  shift 78
	.  error

	bloco  goto 82


state 75
	main : VOID MAIN '(' ')' dList blocoConstrutor .  (31)

	.  reduce 31


state 76
	lParametros : ',' type IDENT . lParametros  (29)
	lParametros : .  (30)

	','  shift 60
	')'  reduce 30

	lParametros  goto 83


state 77
	blocoConstrutor : '{' listacmd . '}'  (33)
	listacmd : listacmd . cmd  (36)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'}'  shift 95
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 98
	while  goto 99
	for  goto 100
	metodo  goto 101


state 78
	bloco : '{' . listacmd retorno '}'  (34)
	listacmd : .  (37)

	.  reduce 37

	listacmd  goto 102


state 79
	bl : INT IDENT '(' parametros ')' dList bloco .  (22)

	.  reduce 22


state 80
	bl : BOOL IDENT '(' parametros ')' dList bloco .  (23)

	.  reduce 23


state 81
	bl : STRING IDENT '(' parametros ')' dList bloco .  (25)

	.  reduce 25


state 82
	bl : DOUBLE IDENT '(' parametros ')' dList bloco .  (24)

	.  reduce 24


state 83
	lParametros : ',' type IDENT lParametros .  (29)

	.  reduce 29


state 84
	exp : IDENT .  (76)
	exp : IDENT . '[' exp ']'  (77)
	metodo : IDENT . '.' IDENT '(' parametrosMetodo ')'  (80)

	'['  shift 103
	'.'  shift 104
	IDENT  reduce 76
	NUM  reduce 76
	DOUBLE  reduce 76
	TRUE  reduce 76
	FALSE  reduce 76
	LITERAL  reduce 76
	AND  reduce 76
	IF  reduce 76
	WHILE  reduce 76
	FOR  reduce 76
	ESCREVA  reduce 76
	LEIA  reduce 76
	OR  reduce 76
	GREATEREQUAL  reduce 76
	LESSEREQUAL  reduce 76
	'='  reduce 76
	'>'  reduce 76
	'<'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'/'  reduce 76
	'*'  reduce 76
	';'  reduce 76
	','  reduce 76
	'('  reduce 76
	')'  reduce 76
	':'  reduce 76
	']'  reduce 76


state 85
	exp : NUM .  (72)

	.  reduce 72


state 86
	exp : DOUBLE .  (73)

	.  reduce 73


state 87
	exp : TRUE .  (70)

	.  reduce 70


state 88
	exp : FALSE .  (71)

	.  reduce 71


state 89
	exp : LITERAL .  (75)

	.  reduce 75


state 90
	cmd : IF . exp $$5 ':' listacmd else ENDIF  (43)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 105
	metodo  goto 101


state 91
	while : WHILE . exp $$6 cmd listacmdrep ENDWHILE  (55)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 106
	metodo  goto 101


state 92
	for : FOR . atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR  (56)

	IDENT  shift 10
	INT  shift 11
	BOOL  shift 12
	STRING  shift 13
	DOUBLE  shift 14
	.  error

	type  goto 107
	atribuicaoFor  goto 108


state 93
	cmd : ESCREVA . escreva ';'  (46)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 109
	escreva  goto 110
	metodo  goto 101


state 94
	cmd : LEIA . leia ';'  (47)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 111
	leia  goto 112
	metodo  goto 101


state 95
	blocoConstrutor : '{' listacmd '}' .  (33)

	.  reduce 33


state 96
	exp : '(' . exp ')'  (74)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 113
	metodo  goto 101


state 97
	cmd : exp . ';'  (41)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	';'  shift 125
	.  error


state 98
	listacmd : listacmd cmd .  (36)

	.  reduce 36


state 99
	cmd : while .  (44)

	.  reduce 44


state 100
	cmd : for .  (45)

	.  reduce 45


state 101
	exp : metodo .  (79)

	.  reduce 79


state 102
	bloco : '{' listacmd . retorno '}'  (34)
	listacmd : listacmd . cmd  (36)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	RETORNO  shift 126
	'('  shift 96
	.  error

	exp  goto 97
	retorno  goto 127
	cmd  goto 98
	while  goto 99
	for  goto 100
	metodo  goto 101


state 103
	exp : IDENT '[' . exp ']'  (77)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 128
	metodo  goto 101


state 104
	metodo : IDENT '.' . IDENT '(' parametrosMetodo ')'  (80)

	IDENT  shift 129
	.  error


state 105
	cmd : IF exp . $$5 ':' listacmd else ENDIF  (43)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	$$5 : .  (42)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	':'  reduce 42

	$$5  goto 130


state 106
	while : WHILE exp . $$6 cmd listacmdrep ENDWHILE  (55)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	$$6 : .  (54)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 54
	NUM  reduce 54
	DOUBLE  reduce 54
	TRUE  reduce 54
	FALSE  reduce 54
	LITERAL  reduce 54
	IF  reduce 54
	WHILE  reduce 54
	FOR  reduce 54
	ESCREVA  reduce 54
	LEIA  reduce 54
	'('  reduce 54

	$$6  goto 131


state 107
	atribuicaoFor : type . IDENT '=' IDENT  (57)
	atribuicaoFor : type . IDENT '=' NUM  (58)
	atribuicaoFor : type . IDENT '=' DOUBLE  (59)

	IDENT  shift 132
	.  error


state 108
	for : FOR atribuicaoFor . ';' exp ';' exp ':' cmd listacmdrep ENDFOR  (56)

	';'  shift 133
	.  error


state 109
	escreva : exp . parametroEscreva  (50)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	parametroEscreva : .  (53)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	','  shift 134
	';'  reduce 53

	parametroEscreva  goto 135


state 110
	cmd : ESCREVA escreva . ';'  (46)

	';'  shift 136
	.  error


state 111
	leia : exp .  (51)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	';'  reduce 51


state 112
	cmd : LEIA leia . ';'  (47)

	';'  shift 137
	.  error


state 113
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : '(' exp . ')'  (74)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	')'  shift 138
	.  error


state 114
	exp : exp AND . exp  (66)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 139
	metodo  goto 101


state 115
	exp : exp OR . exp  (67)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 140
	metodo  goto 101


state 116
	exp : exp GREATEREQUAL . exp  (69)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 141
	metodo  goto 101


state 117
	exp : exp LESSEREQUAL . exp  (68)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 142
	metodo  goto 101


state 118
	exp : exp '=' . exp  (78)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 143
	metodo  goto 101


state 119
	exp : exp '>' . exp  (64)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 144
	metodo  goto 101


state 120
	exp : exp '<' . exp  (65)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 145
	metodo  goto 101


state 121
	exp : exp '+' . exp  (60)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 146
	metodo  goto 101


state 122
	exp : exp '-' . exp  (62)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 147
	metodo  goto 101


state 123
	exp : exp '/' . exp  (63)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 148
	metodo  goto 101


state 124
	exp : exp '*' . exp  (61)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 149
	metodo  goto 101


state 125
	cmd : exp ';' .  (41)

	.  reduce 41


state 126
	retorno : RETORNO . exp ';'  (35)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 150
	metodo  goto 101


state 127
	bloco : '{' listacmd retorno . '}'  (34)

	'}'  shift 151
	.  error


state 128
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : IDENT '[' exp . ']'  (77)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	']'  shift 152
	.  error


state 129
	metodo : IDENT '.' IDENT . '(' parametrosMetodo ')'  (80)

	'('  shift 153
	.  error


state 130
	cmd : IF exp $$5 . ':' listacmd else ENDIF  (43)

	':'  shift 154
	.  error


state 131
	while : WHILE exp $$6 . cmd listacmdrep ENDWHILE  (55)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 155
	while  goto 99
	for  goto 100
	metodo  goto 101


state 132
	atribuicaoFor : type IDENT . '=' IDENT  (57)
	atribuicaoFor : type IDENT . '=' NUM  (58)
	atribuicaoFor : type IDENT . '=' DOUBLE  (59)

	'='  shift 156
	.  error


state 133
	for : FOR atribuicaoFor ';' . exp ';' exp ':' cmd listacmdrep ENDFOR  (56)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 157
	metodo  goto 101


state 134
	parametroEscreva : ',' . exp  (52)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 158
	metodo  goto 101


state 135
	escreva : exp parametroEscreva .  (50)

	.  reduce 50


state 136
	cmd : ESCREVA escreva ';' .  (46)

	.  reduce 46


state 137
	cmd : LEIA leia ';' .  (47)

	.  reduce 47


state 138
	exp : '(' exp ')' .  (74)

	.  reduce 74


state 139
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp AND exp .  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	.  reduce 66


state 140
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp OR exp .  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	.  reduce 67


state 141
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp GREATEREQUAL exp .  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 69
	NUM  reduce 69
	DOUBLE  reduce 69
	TRUE  reduce 69
	FALSE  reduce 69
	LITERAL  reduce 69
	IF  reduce 69
	WHILE  reduce 69
	FOR  reduce 69
	ESCREVA  reduce 69
	LEIA  reduce 69
	'='  reduce 69
	';'  reduce 69
	','  reduce 69
	'('  reduce 69
	')'  reduce 69
	':'  reduce 69
	']'  reduce 69


state 142
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp LESSEREQUAL exp .  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 68
	NUM  reduce 68
	DOUBLE  reduce 68
	TRUE  reduce 68
	FALSE  reduce 68
	LITERAL  reduce 68
	IF  reduce 68
	WHILE  reduce 68
	FOR  reduce 68
	ESCREVA  reduce 68
	LEIA  reduce 68
	'='  reduce 68
	';'  reduce 68
	','  reduce 68
	'('  reduce 68
	')'  reduce 68
	':'  reduce 68
	']'  reduce 68


state 143
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	exp : exp '=' exp .  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 78
	NUM  reduce 78
	DOUBLE  reduce 78
	TRUE  reduce 78
	FALSE  reduce 78
	LITERAL  reduce 78
	IF  reduce 78
	WHILE  reduce 78
	FOR  reduce 78
	ESCREVA  reduce 78
	LEIA  reduce 78
	';'  reduce 78
	','  reduce 78
	'('  reduce 78
	')'  reduce 78
	':'  reduce 78
	']'  reduce 78


state 144
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp '>' exp .  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 64
	NUM  reduce 64
	DOUBLE  reduce 64
	TRUE  reduce 64
	FALSE  reduce 64
	LITERAL  reduce 64
	IF  reduce 64
	WHILE  reduce 64
	FOR  reduce 64
	ESCREVA  reduce 64
	LEIA  reduce 64
	'='  reduce 64
	';'  reduce 64
	','  reduce 64
	'('  reduce 64
	')'  reduce 64
	':'  reduce 64
	']'  reduce 64


state 145
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp '<' exp .  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 65
	NUM  reduce 65
	DOUBLE  reduce 65
	TRUE  reduce 65
	FALSE  reduce 65
	LITERAL  reduce 65
	IF  reduce 65
	WHILE  reduce 65
	FOR  reduce 65
	ESCREVA  reduce 65
	LEIA  reduce 65
	'='  reduce 65
	';'  reduce 65
	','  reduce 65
	'('  reduce 65
	')'  reduce 65
	':'  reduce 65
	']'  reduce 65


state 146
	exp : exp . '+' exp  (60)
	exp : exp '+' exp .  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 60
	NUM  reduce 60
	DOUBLE  reduce 60
	TRUE  reduce 60
	FALSE  reduce 60
	LITERAL  reduce 60
	IF  reduce 60
	WHILE  reduce 60
	FOR  reduce 60
	ESCREVA  reduce 60
	LEIA  reduce 60
	GREATEREQUAL  reduce 60
	LESSEREQUAL  reduce 60
	'='  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	';'  reduce 60
	','  reduce 60
	'('  reduce 60
	')'  reduce 60
	':'  reduce 60
	']'  reduce 60


state 147
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp '-' exp .  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	'/'  shift 123
	'*'  shift 124
	IDENT  reduce 62
	NUM  reduce 62
	DOUBLE  reduce 62
	TRUE  reduce 62
	FALSE  reduce 62
	LITERAL  reduce 62
	IF  reduce 62
	WHILE  reduce 62
	FOR  reduce 62
	ESCREVA  reduce 62
	LEIA  reduce 62
	GREATEREQUAL  reduce 62
	LESSEREQUAL  reduce 62
	'='  reduce 62
	'>'  reduce 62
	'<'  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	';'  reduce 62
	','  reduce 62
	'('  reduce 62
	')'  reduce 62
	':'  reduce 62
	']'  reduce 62


state 148
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp '/' exp .  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	IDENT  reduce 63
	NUM  reduce 63
	DOUBLE  reduce 63
	TRUE  reduce 63
	FALSE  reduce 63
	LITERAL  reduce 63
	IF  reduce 63
	WHILE  reduce 63
	FOR  reduce 63
	ESCREVA  reduce 63
	LEIA  reduce 63
	GREATEREQUAL  reduce 63
	LESSEREQUAL  reduce 63
	'='  reduce 63
	'>'  reduce 63
	'<'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'/'  reduce 63
	'*'  reduce 63
	';'  reduce 63
	','  reduce 63
	'('  reduce 63
	')'  reduce 63
	':'  reduce 63
	']'  reduce 63


state 149
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp '*' exp .  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	IDENT  reduce 61
	NUM  reduce 61
	DOUBLE  reduce 61
	TRUE  reduce 61
	FALSE  reduce 61
	LITERAL  reduce 61
	IF  reduce 61
	WHILE  reduce 61
	FOR  reduce 61
	ESCREVA  reduce 61
	LEIA  reduce 61
	GREATEREQUAL  reduce 61
	LESSEREQUAL  reduce 61
	'='  reduce 61
	'>'  reduce 61
	'<'  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	'/'  reduce 61
	'*'  reduce 61
	';'  reduce 61
	','  reduce 61
	'('  reduce 61
	')'  reduce 61
	':'  reduce 61
	']'  reduce 61


state 150
	retorno : RETORNO exp . ';'  (35)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	';'  shift 159
	.  error


state 151
	bloco : '{' listacmd retorno '}' .  (34)

	.  reduce 34


state 152
	exp : IDENT '[' exp ']' .  (77)

	.  reduce 77


state 153
	metodo : IDENT '.' IDENT '(' . parametrosMetodo ')'  (80)
	parametrosMetodo : .  (82)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	')'  reduce 82

	exp  goto 160
	metodo  goto 101
	parametrosMetodo  goto 161


state 154
	cmd : IF exp $$5 ':' . listacmd else ENDIF  (43)
	listacmd : .  (37)

	.  reduce 37

	listacmd  goto 162


state 155
	while : WHILE exp $$6 cmd . listacmdrep ENDWHILE  (55)
	listacmdrep : .  (40)

	BREAK  shift 163
	IDENT  reduce 40
	NUM  reduce 40
	DOUBLE  reduce 40
	TRUE  reduce 40
	FALSE  reduce 40
	LITERAL  reduce 40
	IF  reduce 40
	WHILE  reduce 40
	ENDWHILE  reduce 40
	FOR  reduce 40
	ESCREVA  reduce 40
	LEIA  reduce 40
	'('  reduce 40

	listacmdrep  goto 164


state 156
	atribuicaoFor : type IDENT '=' . IDENT  (57)
	atribuicaoFor : type IDENT '=' . NUM  (58)
	atribuicaoFor : type IDENT '=' . DOUBLE  (59)

	IDENT  shift 165
	NUM  shift 166
	DOUBLE  shift 167
	.  error


state 157
	for : FOR atribuicaoFor ';' exp . ';' exp ':' cmd listacmdrep ENDFOR  (56)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	';'  shift 168
	.  error


state 158
	parametroEscreva : ',' exp .  (52)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	';'  reduce 52


state 159
	retorno : RETORNO exp ';' .  (35)

	.  reduce 35


state 160
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	parametrosMetodo : exp . lParametrosMetodo  (81)
	lParametrosMetodo : .  (84)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	','  shift 169
	')'  reduce 84

	lParametrosMetodo  goto 170


state 161
	metodo : IDENT '.' IDENT '(' parametrosMetodo . ')'  (80)

	')'  shift 171
	.  error


state 162
	listacmd : listacmd . cmd  (36)
	cmd : IF exp $$5 ':' listacmd . else ENDIF  (43)
	else : .  (49)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'['  shift 172
	'('  shift 96
	ENDIF  reduce 49

	exp  goto 97
	cmd  goto 98
	else  goto 173
	while  goto 99
	for  goto 100
	metodo  goto 101


state 163
	listacmdrep : BREAK .  (39)

	.  reduce 39


state 164
	listacmdrep : listacmdrep . cmd  (38)
	while : WHILE exp $$6 cmd listacmdrep . ENDWHILE  (55)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	ENDWHILE  shift 174
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 175
	while  goto 99
	for  goto 100
	metodo  goto 101


state 165
	atribuicaoFor : type IDENT '=' IDENT .  (57)

	.  reduce 57


state 166
	atribuicaoFor : type IDENT '=' NUM .  (58)

	.  reduce 58


state 167
	atribuicaoFor : type IDENT '=' DOUBLE .  (59)

	.  reduce 59


state 168
	for : FOR atribuicaoFor ';' exp ';' . exp ':' cmd listacmdrep ENDFOR  (56)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 176
	metodo  goto 101


state 169
	lParametrosMetodo : ',' . exp lParametrosMetodo  (83)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	'('  shift 96
	.  error

	exp  goto 177
	metodo  goto 101


state 170
	parametrosMetodo : exp lParametrosMetodo .  (81)

	.  reduce 81


state 171
	metodo : IDENT '.' IDENT '(' parametrosMetodo ')' .  (80)

	.  reduce 80


state 172
	else : '[' . ELSE ':' cmd listacmd ']'  (48)

	ELSE  shift 178
	.  error


state 173
	cmd : IF exp $$5 ':' listacmd else . ENDIF  (43)

	ENDIF  shift 179
	.  error


state 174
	while : WHILE exp $$6 cmd listacmdrep ENDWHILE .  (55)

	.  reduce 55


state 175
	listacmdrep : listacmdrep cmd .  (38)

	.  reduce 38


state 176
	for : FOR atribuicaoFor ';' exp ';' exp . ':' cmd listacmdrep ENDFOR  (56)
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	':'  shift 180
	.  error


state 177
	exp : exp . '+' exp  (60)
	exp : exp . '*' exp  (61)
	exp : exp . '-' exp  (62)
	exp : exp . '/' exp  (63)
	exp : exp . '>' exp  (64)
	exp : exp . '<' exp  (65)
	exp : exp . AND exp  (66)
	exp : exp . OR exp  (67)
	exp : exp . LESSEREQUAL exp  (68)
	exp : exp . GREATEREQUAL exp  (69)
	exp : exp . '=' exp  (78)
	lParametrosMetodo : ',' exp . lParametrosMetodo  (83)
	lParametrosMetodo : .  (84)

	AND  shift 114
	OR  shift 115
	GREATEREQUAL  shift 116
	LESSEREQUAL  shift 117
	'='  shift 118
	'>'  shift 119
	'<'  shift 120
	'+'  shift 121
	'-'  shift 122
	'/'  shift 123
	'*'  shift 124
	','  shift 169
	')'  reduce 84

	lParametrosMetodo  goto 181


state 178
	else : '[' ELSE . ':' cmd listacmd ']'  (48)

	':'  shift 182
	.  error


state 179
	cmd : IF exp $$5 ':' listacmd else ENDIF .  (43)

	.  reduce 43


state 180
	for : FOR atribuicaoFor ';' exp ';' exp ':' . cmd listacmdrep ENDFOR  (56)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 183
	while  goto 99
	for  goto 100
	metodo  goto 101


state 181
	lParametrosMetodo : ',' exp lParametrosMetodo .  (83)

	.  reduce 83


state 182
	else : '[' ELSE ':' . cmd listacmd ']'  (48)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 184
	while  goto 99
	for  goto 100
	metodo  goto 101


state 183
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd . listacmdrep ENDFOR  (56)
	listacmdrep : .  (40)

	BREAK  shift 163
	IDENT  reduce 40
	NUM  reduce 40
	DOUBLE  reduce 40
	TRUE  reduce 40
	FALSE  reduce 40
	LITERAL  reduce 40
	IF  reduce 40
	WHILE  reduce 40
	FOR  reduce 40
	ENDFOR  reduce 40
	ESCREVA  reduce 40
	LEIA  reduce 40
	'('  reduce 40

	listacmdrep  goto 185


state 184
	else : '[' ELSE ':' cmd . listacmd ']'  (48)
	listacmd : .  (37)

	.  reduce 37

	listacmd  goto 186


state 185
	listacmdrep : listacmdrep . cmd  (38)
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep . ENDFOR  (56)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ENDFOR  shift 187
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	.  error

	exp  goto 97
	cmd  goto 175
	while  goto 99
	for  goto 100
	metodo  goto 101


state 186
	listacmd : listacmd . cmd  (36)
	else : '[' ELSE ':' cmd listacmd . ']'  (48)

	IDENT  shift 84
	NUM  shift 85
	DOUBLE  shift 86
	TRUE  shift 87
	FALSE  shift 88
	LITERAL  shift 89
	IF  shift 90
	WHILE  shift 91
	FOR  shift 92
	ESCREVA  shift 93
	LEIA  shift 94
	'('  shift 96
	']'  shift 188
	.  error

	exp  goto 97
	cmd  goto 98
	while  goto 99
	for  goto 100
	metodo  goto 101


state 187
	for : FOR atribuicaoFor ';' exp ';' exp ':' cmd listacmdrep ENDFOR .  (56)

	.  reduce 56


state 188
	else : '[' ELSE ':' cmd listacmd ']' .  (48)

	.  reduce 48


50 terminals, 38 nonterminals
85 grammar rules, 189 states
